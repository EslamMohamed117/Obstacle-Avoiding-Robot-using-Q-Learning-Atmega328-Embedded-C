
Obstacle Avoiding - Robot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001758  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000da  00000000  00000000  000000f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000019  00800100  00800100  00001758  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00001758  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000046  00000000  00000000  000017b3  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000218  00000000  00000000  00001800  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003454  00000000  00000000  00001a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cec  00000000  00000000  00004e6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013df  00000000  00000000  00005b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003dc  00000000  00000000  00006f38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000344  00000000  00000000  00007314  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014a2  00000000  00000000  00007658  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00008afa  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00001626  00001626  0000171a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00008ca4  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.main    00000080  00000f22  00000f22  00001016  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.save_q_table 0000006c  00001098  00001098  0000118c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.retrive_q_table 0000006c  00001104  00001104  000011f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.RANDOM  00000026  00001480  00001480  00001574  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.DECAY   0000000e  00001592  00001592  00001686  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.GET_STATE 000000a4  00000e7e  00000e7e  00000f72  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.MAX     00000144  0000075c  0000075c  00000850  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.Obstacle_Avoider 0000002e  000012d8  000012d8  000013cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.Update  00000132  000008a0  000008a0  00000994  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.ARGMAX  0000018a  00000480  00000480  00000574  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.Train   000003a6  000000da  000000da  000001ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.Test    00000152  0000060a  0000060a  000006fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .data.REWARDS 00000020  00800159  0000162a  0000171e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 28 .bss.Q        00000040  00800119  00800119  00001758  2**0
                  ALLOC
 29 .data.ACTIONS 00000008  00800179  0000164a  0000173e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 30 .bss.ACTION_TAKEN 00000001  00800197  00800197  00001758  2**0
                  ALLOC
 31 .bss.ACTION   00000002  00800191  00800191  00001758  2**0
                  ALLOC
 32 .bss.STATE    00000002  00800193  00800193  00001758  2**0
                  ALLOC
 33 .data.EPISODES 00000002  00800195  00001662  00001756  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 34 .data.EPSILON 00000004  00800181  00001652  00001746  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 35 .data.GAMMA   00000004  00800185  00001656  0000174a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 36 .data.ALPHA   00000004  00800189  0000165a  0000174e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 37 .text.config_RC_Driver 00000026  000014a6  000014a6  0000159a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.forward 0000002a  00001334  00001334  00001428  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.backward 0000002a  0000135e  0000135e  00001452  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.right   0000002a  00001388  00001388  0000147c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.left    0000002a  000013b2  000013b2  000014a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.stop    0000002a  000013dc  000013dc  000014d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.config_servo_timer 00000058  00001170  00001170  00001264  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.set_servo_angel 00000040  00001298  00001298  0000138c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.__vector_13 0000002a  00001406  00001406  000014fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.DIO_SetPinDirection 000000bc  00000c52  00000c52  00000d46  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.DIO_SetPinValue 000000bc  00000d0e  00000d0e  00000e02  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.ultarasonic_distance 0000007c  00000fa2  00000fa2  00001096  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.avrlibc.fplib 0000000e  000015a0  000015a0  00001694  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.avrlibc.fplib 000000ce  00000b84  00000b84  00000c78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.avrlibc.fplib 0000000a  000015f2  000015f2  000016e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.avrlibc.fplib 00000008  00001610  00001610  00001704  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.avrlibc.fplib 000000de  000009d2  000009d2  00000ac6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.avrlibc.fplib 0000007a  0000101e  0000101e  00001112  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.avrlibc.fplib 00000048  000011c8  000011c8  000012bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.avrlibc.fplib 0000000c  000015e6  000015e6  000016da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.avrlibc.fplib 00000006  00001620  00001620  00001714  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.avrlibc.fplib 0000000e  000015ae  000015ae  000016a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.avrlibc.fplib 0000000e  000015bc  000015bc  000016b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.avrlibc.fplib 00000022  000014f0  000014f0  000015e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.avrlibc.fplib 00000044  00001210  00001210  00001304  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.avrlibc.fplib 0000000e  000015ca  000015ca  000016be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.avrlibc.fplib 0000000a  000015fc  000015fc  000016f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.avrlibc.fplib 00000008  00001618  00001618  0000170c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.avrlibc.fplib 000000d4  00000ab0  00000ab0  00000ba4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.libgcc.div 00000028  00001430  00001430  00001524  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.libgcc.div 00000044  00001254  00001254  00001348  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.libgcc.mul 0000001e  00001512  00001512  00001606  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.libgcc.div 00000028  00001458  00001458  0000154c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .data         00000004  0080018d  0000165e  00001752  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 71 .text.avrlibc 000000b4  00000dca  00000dca  00000ebe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.avrlibc 0000000e  000015d8  000015d8  000016cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.avrlibc 00000010  00001562  00001562  00001656  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.avrlibc 0000000a  00001606  00001606  000016fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.avrlibc 00000024  000014cc  000014cc  000015c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.avrlibc 0000001c  00001530  00001530  00001624  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.libgcc.div 0000002e  00001306  00001306  000013fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.libgcc.div 00000010  00001572  00001572  00001666  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.libgcc.mul 00000016  0000154c  0000154c  00001640  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.libgcc.mul 00000010  00001582  00001582  00001676  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 43 00 	jmp	0x86	; 0x86 <__ctors_end>
   4:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
   8:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
   c:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  10:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  14:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  18:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  1c:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  20:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  24:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  28:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  2c:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  30:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  34:	0c 94 03 0a 	jmp	0x1406	; 0x1406 <__vector_13>
  38:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  3c:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  40:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  44:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  48:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  4c:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  50:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  54:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  58:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  5c:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  60:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>
  64:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 59       	subi	r16, 0x91	; 145
  6c:	80 01       	movw	r16, r0
  6e:	59 01       	movw	r10, r18
  70:	91 00       	.word	0x0091	; ????
  72:	16 2a       	or	r1, r22
  74:	01 91       	ld	r16, Z+
  76:	01 95       	neg	r16
  78:	80 01       	movw	r16, r0
  7a:	95 01       	movw	r18, r10
  7c:	97 00       	.word	0x0097	; ????
  7e:	16 62       	ori	r17, 0x26	; 38
  80:	01 97       	sbiw	r24, 0x01	; 1
  82:	01 98       	cbi	0x00, 1	; 0
  84:	80 00       	.word	0x0080	; ????

00000086 <__ctors_end>:
  86:	11 24       	eor	r1, r1
  88:	1f be       	out	0x3f, r1	; 63
  8a:	cf ef       	ldi	r28, 0xFF	; 255
  8c:	d8 e0       	ldi	r29, 0x08	; 8
  8e:	de bf       	out	0x3e, r29	; 62
  90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
  92:	e8 e6       	ldi	r30, 0x68	; 104
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	40 e0       	ldi	r20, 0x00	; 0
  98:	17 c0       	rjmp	.+46     	; 0xc8 <__do_clear_bss+0x8>
  9a:	b5 91       	lpm	r27, Z+
  9c:	a5 91       	lpm	r26, Z+
  9e:	35 91       	lpm	r19, Z+
  a0:	25 91       	lpm	r18, Z+
  a2:	05 91       	lpm	r16, Z+
  a4:	07 fd       	sbrc	r16, 7
  a6:	0c c0       	rjmp	.+24     	; 0xc0 <__do_clear_bss>
  a8:	95 91       	lpm	r25, Z+
  aa:	85 91       	lpm	r24, Z+
  ac:	ef 01       	movw	r28, r30
  ae:	f9 2f       	mov	r31, r25
  b0:	e8 2f       	mov	r30, r24
  b2:	05 90       	lpm	r0, Z+
  b4:	0d 92       	st	X+, r0
  b6:	a2 17       	cp	r26, r18
  b8:	b3 07       	cpc	r27, r19
  ba:	d9 f7       	brne	.-10     	; 0xb2 <__do_copy_data+0x20>
  bc:	fe 01       	movw	r30, r28
  be:	04 c0       	rjmp	.+8      	; 0xc8 <__do_clear_bss+0x8>

000000c0 <__do_clear_bss>:
  c0:	1d 92       	st	X+, r1
  c2:	a2 17       	cp	r26, r18
  c4:	b3 07       	cpc	r27, r19
  c6:	e1 f7       	brne	.-8      	; 0xc0 <__do_clear_bss>
  c8:	e5 38       	cpi	r30, 0x85	; 133
  ca:	f4 07       	cpc	r31, r20
  cc:	31 f7       	brne	.-52     	; 0x9a <__do_copy_data+0x8>
  ce:	0e 94 91 07 	call	0xf22	; 0xf22 <main>
  d2:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <_exit>

000000d6 <_exit>:
  d6:	f8 94       	cli

000000d8 <__stop_program>:
  d8:	ff cf       	rjmp	.-2      	; 0xd8 <__stop_program>

Disassembly of section .text:

00001626 <__bad_interrupt>:
    1626:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000f22 <main>:
#define  F_CPU 16000000UL
#include <util/delay.h>
 
int main(void)
{
	DIO_SetPinDirection(PORT2,5,OUTPUT);
 f22:	41 e0       	ldi	r20, 0x01	; 1
 f24:	65 e0       	ldi	r22, 0x05	; 5
 f26:	82 e0       	ldi	r24, 0x02	; 2
 f28:	0e 94 29 06 	call	0xc52	; 0xc52 <DIO_SetPinDirection>
	//DIO_SetPinDirection(PORT2,4,OUTPUT);
	//DIO_SetPinDirection(PORT2,3,OUTPUT);
	//DIO_SetPinDirection(PORT2,2,OUTPUT);
	DIO_SetPinDirection(PORT1,5,OUTPUT);
 f2c:	41 e0       	ldi	r20, 0x01	; 1
 f2e:	65 e0       	ldi	r22, 0x05	; 5
 f30:	81 e0       	ldi	r24, 0x01	; 1
 f32:	0e 94 29 06 	call	0xc52	; 0xc52 <DIO_SetPinDirection>
	
	DIO_SetPinDirection(PORT3,0,OUTPUT);
 f36:	41 e0       	ldi	r20, 0x01	; 1
 f38:	60 e0       	ldi	r22, 0x00	; 0
 f3a:	83 e0       	ldi	r24, 0x03	; 3
 f3c:	0e 94 29 06 	call	0xc52	; 0xc52 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORT3,1,OUTPUT);
 f40:	41 e0       	ldi	r20, 0x01	; 1
 f42:	61 e0       	ldi	r22, 0x01	; 1
 f44:	83 e0       	ldi	r24, 0x03	; 3
 f46:	0e 94 29 06 	call	0xc52	; 0xc52 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORT3,2,OUTPUT);
 f4a:	41 e0       	ldi	r20, 0x01	; 1
 f4c:	62 e0       	ldi	r22, 0x02	; 2
 f4e:	83 e0       	ldi	r24, 0x03	; 3
 f50:	0e 94 29 06 	call	0xc52	; 0xc52 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORT3,3,OUTPUT);
 f54:	41 e0       	ldi	r20, 0x01	; 1
 f56:	63 e0       	ldi	r22, 0x03	; 3
 f58:	83 e0       	ldi	r24, 0x03	; 3
 f5a:	0e 94 29 06 	call	0xc52	; 0xc52 <DIO_SetPinDirection>
	
	DIO_SetPinDirection(PORT3,PIN7,OUTPUT);
 f5e:	41 e0       	ldi	r20, 0x01	; 1
 f60:	67 e0       	ldi	r22, 0x07	; 7
 f62:	83 e0       	ldi	r24, 0x03	; 3
 f64:	0e 94 29 06 	call	0xc52	; 0xc52 <DIO_SetPinDirection>
	//config_servo_timer();
	set_servo_angel(0); // Configuration + center position
 f68:	80 e0       	ldi	r24, 0x00	; 0
 f6a:	0e 94 4c 09 	call	0x1298	; 0x1298 <set_servo_angel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 f6e:	2f e3       	ldi	r18, 0x3F	; 63
 f70:	8d e0       	ldi	r24, 0x0D	; 13
 f72:	93 e0       	ldi	r25, 0x03	; 3
 f74:	21 50       	subi	r18, 0x01	; 1
 f76:	80 40       	sbci	r24, 0x00	; 0
 f78:	90 40       	sbci	r25, 0x00	; 0
 f7a:	e1 f7       	brne	.-8      	; 0xf74 <main+0x52>
 f7c:	00 c0       	rjmp	.+0      	; 0xf7e <main+0x5c>
 f7e:	00 00       	nop
	_delay_ms(1000);
	config_RC_Driver(); // Config the motor speed 
 f80:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <config_RC_Driver>
	 // led1>>left   led2>>right   led3>>backward    led4>>forward 
   DIO_SetPinValue(PORT1,5,0);
 f84:	40 e0       	ldi	r20, 0x00	; 0
 f86:	65 e0       	ldi	r22, 0x05	; 5
 f88:	81 e0       	ldi	r24, 0x01	; 1
 f8a:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
   Train(); 
 f8e:	0e 94 6d 00 	call	0xda	; 0xda <__data_load_end>
   DIO_SetPinValue(PORT1,5,1);
 f92:	41 e0       	ldi	r20, 0x01	; 1
 f94:	65 e0       	ldi	r22, 0x05	; 5
 f96:	81 e0       	ldi	r24, 0x01	; 1
 f98:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
   Test();
 f9c:	0e 94 05 03 	call	0x60a	; 0x60a <Test>
 fa0:	ff cf       	rjmp	.-2      	; 0xfa0 <main+0x7e>

Disassembly of section .text.save_q_table:

00001098 <save_q_table>:
	return empty;
}
//=============================================================================================

void save_q_table()
{
    1098:	ef 92       	push	r14
    109a:	ff 92       	push	r15
    109c:	0f 93       	push	r16
    109e:	1f 93       	push	r17
    10a0:	cf 93       	push	r28
    10a2:	df 93       	push	r29
	uint16_t loc=0;
	
	for(int i=0; i<Q_ROW; i++)
    10a4:	00 e0       	ldi	r16, 0x00	; 0
    10a6:	10 e0       	ldi	r17, 0x00	; 0
}
//=============================================================================================

void save_q_table()
{
	uint16_t loc=0;
    10a8:	c0 e0       	ldi	r28, 0x00	; 0
    10aa:	d0 e0       	ldi	r29, 0x00	; 0
	
	for(int i=0; i<Q_ROW; i++)
    10ac:	21 c0       	rjmp	.+66     	; 0x10f0 <save_q_table+0x58>
	{
		for(int k=0; k<Q_COL; k++)
		{
			eeprom_write_float((float*)loc,Q[i][k]);
    10ae:	f8 01       	movw	r30, r16
    10b0:	ee 0f       	add	r30, r30
    10b2:	ff 1f       	adc	r31, r31
    10b4:	ee 0f       	add	r30, r30
    10b6:	ff 1f       	adc	r31, r31
    10b8:	ee 0d       	add	r30, r14
    10ba:	ff 1d       	adc	r31, r15
    10bc:	ee 0f       	add	r30, r30
    10be:	ff 1f       	adc	r31, r31
    10c0:	ee 0f       	add	r30, r30
    10c2:	ff 1f       	adc	r31, r31
    10c4:	e7 5e       	subi	r30, 0xE7	; 231
    10c6:	fe 4f       	sbci	r31, 0xFE	; 254
    10c8:	40 81       	ld	r20, Z
    10ca:	51 81       	ldd	r21, Z+1	; 0x01
    10cc:	62 81       	ldd	r22, Z+2	; 0x02
    10ce:	73 81       	ldd	r23, Z+3	; 0x03
    10d0:	ce 01       	movw	r24, r28
    10d2:	0e 94 b1 0a 	call	0x1562	; 0x1562 <eeprom_write_dword>
			loc=loc+4;
    10d6:	24 96       	adiw	r28, 0x04	; 4
{
	uint16_t loc=0;
	
	for(int i=0; i<Q_ROW; i++)
	{
		for(int k=0; k<Q_COL; k++)
    10d8:	8f ef       	ldi	r24, 0xFF	; 255
    10da:	e8 1a       	sub	r14, r24
    10dc:	f8 0a       	sbc	r15, r24
    10de:	02 c0       	rjmp	.+4      	; 0x10e4 <save_q_table+0x4c>
    10e0:	e1 2c       	mov	r14, r1
    10e2:	f1 2c       	mov	r15, r1
    10e4:	84 e0       	ldi	r24, 0x04	; 4
    10e6:	e8 16       	cp	r14, r24
    10e8:	f1 04       	cpc	r15, r1
    10ea:	0c f3       	brlt	.-62     	; 0x10ae <save_q_table+0x16>

void save_q_table()
{
	uint16_t loc=0;
	
	for(int i=0; i<Q_ROW; i++)
    10ec:	0f 5f       	subi	r16, 0xFF	; 255
    10ee:	1f 4f       	sbci	r17, 0xFF	; 255
    10f0:	04 30       	cpi	r16, 0x04	; 4
    10f2:	11 05       	cpc	r17, r1
    10f4:	ac f3       	brlt	.-22     	; 0x10e0 <save_q_table+0x48>
		{
			eeprom_write_float((float*)loc,Q[i][k]);
			loc=loc+4;
		}
	}
}
    10f6:	df 91       	pop	r29
    10f8:	cf 91       	pop	r28
    10fa:	1f 91       	pop	r17
    10fc:	0f 91       	pop	r16
    10fe:	ff 90       	pop	r15
    1100:	ef 90       	pop	r14
    1102:	08 95       	ret

Disassembly of section .text.retrive_q_table:

00001104 <retrive_q_table>:
//=============================================================================================
void retrive_q_table()
{
    1104:	ef 92       	push	r14
    1106:	ff 92       	push	r15
    1108:	0f 93       	push	r16
    110a:	1f 93       	push	r17
    110c:	cf 93       	push	r28
    110e:	df 93       	push	r29
	uint16_t loc=0;
	
	for(int i=0; i<Q_ROW; i++)
    1110:	00 e0       	ldi	r16, 0x00	; 0
    1112:	10 e0       	ldi	r17, 0x00	; 0
	}
}
//=============================================================================================
void retrive_q_table()
{
	uint16_t loc=0;
    1114:	e1 2c       	mov	r14, r1
    1116:	f1 2c       	mov	r15, r1
	
	for(int i=0; i<Q_ROW; i++)
    1118:	21 c0       	rjmp	.+66     	; 0x115c <retrive_q_table+0x58>
	{
		for(int k=0; k<Q_COL; k++)
		{
			Q[i][k]=eeprom_read_float((float *) loc);
    111a:	b7 01       	movw	r22, r14
    111c:	80 e8       	ldi	r24, 0x80	; 128
    111e:	0e 94 ec 0a 	call	0x15d8	; 0x15d8 <eeprom_read_dword>
    1122:	f8 01       	movw	r30, r16
    1124:	ee 0f       	add	r30, r30
    1126:	ff 1f       	adc	r31, r31
    1128:	ee 0f       	add	r30, r30
    112a:	ff 1f       	adc	r31, r31
    112c:	ec 0f       	add	r30, r28
    112e:	fd 1f       	adc	r31, r29
    1130:	ee 0f       	add	r30, r30
    1132:	ff 1f       	adc	r31, r31
    1134:	ee 0f       	add	r30, r30
    1136:	ff 1f       	adc	r31, r31
    1138:	e7 5e       	subi	r30, 0xE7	; 231
    113a:	fe 4f       	sbci	r31, 0xFE	; 254
    113c:	60 83       	st	Z, r22
    113e:	71 83       	std	Z+1, r23	; 0x01
    1140:	82 83       	std	Z+2, r24	; 0x02
    1142:	93 83       	std	Z+3, r25	; 0x03
			loc=loc+4;
    1144:	84 e0       	ldi	r24, 0x04	; 4
    1146:	e8 0e       	add	r14, r24
    1148:	f1 1c       	adc	r15, r1
{
	uint16_t loc=0;
	
	for(int i=0; i<Q_ROW; i++)
	{
		for(int k=0; k<Q_COL; k++)
    114a:	21 96       	adiw	r28, 0x01	; 1
    114c:	02 c0       	rjmp	.+4      	; 0x1152 <retrive_q_table+0x4e>
    114e:	c0 e0       	ldi	r28, 0x00	; 0
    1150:	d0 e0       	ldi	r29, 0x00	; 0
    1152:	c4 30       	cpi	r28, 0x04	; 4
    1154:	d1 05       	cpc	r29, r1
    1156:	0c f3       	brlt	.-62     	; 0x111a <retrive_q_table+0x16>
//=============================================================================================
void retrive_q_table()
{
	uint16_t loc=0;
	
	for(int i=0; i<Q_ROW; i++)
    1158:	0f 5f       	subi	r16, 0xFF	; 255
    115a:	1f 4f       	sbci	r17, 0xFF	; 255
    115c:	04 30       	cpi	r16, 0x04	; 4
    115e:	11 05       	cpc	r17, r1
    1160:	b4 f3       	brlt	.-20     	; 0x114e <retrive_q_table+0x4a>
		{
			Q[i][k]=eeprom_read_float((float *) loc);
			loc=loc+4;
		}
	}
}
    1162:	df 91       	pop	r29
    1164:	cf 91       	pop	r28
    1166:	1f 91       	pop	r17
    1168:	0f 91       	pop	r16
    116a:	ff 90       	pop	r15
    116c:	ef 90       	pop	r14
    116e:	08 95       	ret

Disassembly of section .text.RANDOM:

00001480 <RANDOM>:
  OR FROM Q_TABLE*/
  
  float RANDOM_VARIABLE;
  float PROBABILITY;

  RANDOM_VARIABLE = rand() % 100;
    1480:	0e 94 31 07 	call	0xe62	; 0xe62 <rand>
    1484:	64 e6       	ldi	r22, 0x64	; 100
    1486:	70 e0       	ldi	r23, 0x00	; 0
    1488:	0e 94 18 0a 	call	0x1430	; 0x1430 <__divmodhi4>
    148c:	bc 01       	movw	r22, r24
    148e:	99 0f       	add	r25, r25
    1490:	88 0b       	sbc	r24, r24
    1492:	99 0b       	sbc	r25, r25
    1494:	0e 94 11 08 	call	0x1022	; 0x1022 <__floatsisf>
  PROBABILITY = RANDOM_VARIABLE/100;
    1498:	20 e0       	ldi	r18, 0x00	; 0
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	48 ec       	ldi	r20, 0xC8	; 200
    149e:	52 e4       	ldi	r21, 0x42	; 66
    14a0:	0e 94 08 0b 	call	0x1610	; 0x1610 <__divsf3>

  return PROBABILITY;
}
    14a4:	08 95       	ret

Disassembly of section .text.DECAY:

00001592 <DECAY>:
  EPSILON(EXPLORATION PARAMETER) WITH
  TIME.FINALLY AT THE END YOU GET RID 
  EPSILON AND THE ROBOT LEARNS TO AVOID
  OBSTACLES ON ITS OWN */
 
  PARAMETER = PARAMETER*0.98; //PARAMETER HERE IS THE EPSILON
    1592:	28 e4       	ldi	r18, 0x48	; 72
    1594:	31 ee       	ldi	r19, 0xE1	; 225
    1596:	4a e7       	ldi	r20, 0x7A	; 122
    1598:	5f e3       	ldi	r21, 0x3F	; 63
    159a:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__mulsf3>
  return PARAMETER;
}
    159e:	08 95       	ret

Disassembly of section .text.GET_STATE:

00000e7e <GET_STATE>:
			empty =false;
			break;
		}
	}
	return empty;
}
 e7e:	cf 93       	push	r28
 e80:	df 93       	push	r29
 e82:	8a e5       	ldi	r24, 0x5A	; 90
 e84:	0e 94 4c 09 	call	0x1298	; 0x1298 <set_servo_angel>
 e88:	2f e3       	ldi	r18, 0x3F	; 63
 e8a:	82 e4       	ldi	r24, 0x42	; 66
 e8c:	9f e0       	ldi	r25, 0x0F	; 15
 e8e:	21 50       	subi	r18, 0x01	; 1
 e90:	80 40       	sbci	r24, 0x00	; 0
 e92:	90 40       	sbci	r25, 0x00	; 0
 e94:	e1 f7       	brne	.-8      	; 0xe8e <GET_STATE+0x10>
 e96:	00 c0       	rjmp	.+0      	; 0xe98 <GET_STATE+0x1a>
 e98:	00 00       	nop
 e9a:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <ultarasonic_distance>
 e9e:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <distance+0x1>
 ea2:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <distance>
 ea6:	44 97       	sbiw	r24, 0x14	; 20
 ea8:	14 f0       	brlt	.+4      	; 0xeae <GET_STATE+0x30>
 eaa:	c0 e0       	ldi	r28, 0x00	; 0
 eac:	01 c0       	rjmp	.+2      	; 0xeb0 <GET_STATE+0x32>
 eae:	c1 e0       	ldi	r28, 0x01	; 1
 eb0:	86 ea       	ldi	r24, 0xA6	; 166
 eb2:	0e 94 4c 09 	call	0x1298	; 0x1298 <set_servo_angel>
 eb6:	2f e3       	ldi	r18, 0x3F	; 63
 eb8:	82 e4       	ldi	r24, 0x42	; 66
 eba:	9f e0       	ldi	r25, 0x0F	; 15
 ebc:	21 50       	subi	r18, 0x01	; 1
 ebe:	80 40       	sbci	r24, 0x00	; 0
 ec0:	90 40       	sbci	r25, 0x00	; 0
 ec2:	e1 f7       	brne	.-8      	; 0xebc <GET_STATE+0x3e>
 ec4:	00 c0       	rjmp	.+0      	; 0xec6 <GET_STATE+0x48>
 ec6:	00 00       	nop
 ec8:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <ultarasonic_distance>
 ecc:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <distance+0x1>
 ed0:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <distance>
 ed4:	44 97       	sbiw	r24, 0x14	; 20
 ed6:	14 f0       	brlt	.+4      	; 0xedc <GET_STATE+0x5e>
 ed8:	d0 e0       	ldi	r29, 0x00	; 0
 eda:	01 c0       	rjmp	.+2      	; 0xede <GET_STATE+0x60>
 edc:	d1 e0       	ldi	r29, 0x01	; 1
 ede:	80 e0       	ldi	r24, 0x00	; 0
 ee0:	0e 94 4c 09 	call	0x1298	; 0x1298 <set_servo_angel>
 ee4:	2f e3       	ldi	r18, 0x3F	; 63
 ee6:	82 e4       	ldi	r24, 0x42	; 66
 ee8:	9f e0       	ldi	r25, 0x0F	; 15
 eea:	21 50       	subi	r18, 0x01	; 1
 eec:	80 40       	sbci	r24, 0x00	; 0
 eee:	90 40       	sbci	r25, 0x00	; 0
 ef0:	e1 f7       	brne	.-8      	; 0xeea <GET_STATE+0x6c>
 ef2:	00 c0       	rjmp	.+0      	; 0xef4 <GET_STATE+0x76>
 ef4:	00 00       	nop
 ef6:	cc 23       	and	r28, r28
 ef8:	11 f0       	breq	.+4      	; 0xefe <GET_STATE+0x80>
 efa:	d1 11       	cpse	r29, r1
 efc:	07 c0       	rjmp	.+14     	; 0xf0c <GET_STATE+0x8e>
 efe:	c1 11       	cpse	r28, r1
 f00:	08 c0       	rjmp	.+16     	; 0xf12 <GET_STATE+0x94>
 f02:	dd 23       	and	r29, r29
 f04:	49 f0       	breq	.+18     	; 0xf18 <GET_STATE+0x9a>
 f06:	81 e0       	ldi	r24, 0x01	; 1
 f08:	90 e0       	ldi	r25, 0x00	; 0
 f0a:	08 c0       	rjmp	.+16     	; 0xf1c <GET_STATE+0x9e>
 f0c:	83 e0       	ldi	r24, 0x03	; 3
 f0e:	90 e0       	ldi	r25, 0x00	; 0
 f10:	05 c0       	rjmp	.+10     	; 0xf1c <GET_STATE+0x9e>
 f12:	82 e0       	ldi	r24, 0x02	; 2
 f14:	90 e0       	ldi	r25, 0x00	; 0
 f16:	02 c0       	rjmp	.+4      	; 0xf1c <GET_STATE+0x9e>
 f18:	80 e0       	ldi	r24, 0x00	; 0
 f1a:	90 e0       	ldi	r25, 0x00	; 0
 f1c:	df 91       	pop	r29
 f1e:	cf 91       	pop	r28
 f20:	08 95       	ret

Disassembly of section .text.MAX:

0000075c <MAX>:
 75c:	8f 92       	push	r8
 75e:	9f 92       	push	r9
 760:	af 92       	push	r10
 762:	bf 92       	push	r11
 764:	cf 92       	push	r12
 766:	df 92       	push	r13
 768:	ef 92       	push	r14
 76a:	ff 92       	push	r15
 76c:	0f 93       	push	r16
 76e:	1f 93       	push	r17
 770:	cf 93       	push	r28
 772:	df 93       	push	r29
 774:	cd b7       	in	r28, 0x3d	; 61
 776:	de b7       	in	r29, 0x3e	; 62
 778:	60 97       	sbiw	r28, 0x10	; 16
 77a:	0f b6       	in	r0, 0x3f	; 63
 77c:	f8 94       	cli
 77e:	de bf       	out	0x3e, r29	; 62
 780:	0f be       	out	0x3f, r0	; 63
 782:	cd bf       	out	0x3d, r28	; 61
 784:	80 e0       	ldi	r24, 0x00	; 0
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	21 c0       	rjmp	.+66     	; 0x7cc <MAX+0x70>
 78a:	fb 01       	movw	r30, r22
 78c:	ee 0f       	add	r30, r30
 78e:	ff 1f       	adc	r31, r31
 790:	ee 0f       	add	r30, r30
 792:	ff 1f       	adc	r31, r31
 794:	e8 0f       	add	r30, r24
 796:	f9 1f       	adc	r31, r25
 798:	ee 0f       	add	r30, r30
 79a:	ff 1f       	adc	r31, r31
 79c:	ee 0f       	add	r30, r30
 79e:	ff 1f       	adc	r31, r31
 7a0:	e7 5e       	subi	r30, 0xE7	; 231
 7a2:	fe 4f       	sbci	r31, 0xFE	; 254
 7a4:	00 81       	ld	r16, Z
 7a6:	11 81       	ldd	r17, Z+1	; 0x01
 7a8:	22 81       	ldd	r18, Z+2	; 0x02
 7aa:	33 81       	ldd	r19, Z+3	; 0x03
 7ac:	fc 01       	movw	r30, r24
 7ae:	ee 0f       	add	r30, r30
 7b0:	ff 1f       	adc	r31, r31
 7b2:	ee 0f       	add	r30, r30
 7b4:	ff 1f       	adc	r31, r31
 7b6:	41 e0       	ldi	r20, 0x01	; 1
 7b8:	50 e0       	ldi	r21, 0x00	; 0
 7ba:	4c 0f       	add	r20, r28
 7bc:	5d 1f       	adc	r21, r29
 7be:	e4 0f       	add	r30, r20
 7c0:	f5 1f       	adc	r31, r21
 7c2:	00 83       	st	Z, r16
 7c4:	11 83       	std	Z+1, r17	; 0x01
 7c6:	22 83       	std	Z+2, r18	; 0x02
 7c8:	33 83       	std	Z+3, r19	; 0x03
 7ca:	01 96       	adiw	r24, 0x01	; 1
 7cc:	84 30       	cpi	r24, 0x04	; 4
 7ce:	91 05       	cpc	r25, r1
 7d0:	e4 f2       	brlt	.-72     	; 0x78a <MAX+0x2e>
 7d2:	00 e0       	ldi	r16, 0x00	; 0
 7d4:	10 e0       	ldi	r17, 0x00	; 0
 7d6:	f1 2c       	mov	r15, r1
 7d8:	e1 2c       	mov	r14, r1
 7da:	d1 2c       	mov	r13, r1
 7dc:	c1 2c       	mov	r12, r1
 7de:	45 c0       	rjmp	.+138    	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 7e0:	f8 01       	movw	r30, r16
 7e2:	ee 0f       	add	r30, r30
 7e4:	ff 1f       	adc	r31, r31
 7e6:	ee 0f       	add	r30, r30
 7e8:	ff 1f       	adc	r31, r31
 7ea:	81 e0       	ldi	r24, 0x01	; 1
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	8c 0f       	add	r24, r28
 7f0:	9d 1f       	adc	r25, r29
 7f2:	e8 0f       	add	r30, r24
 7f4:	f9 1f       	adc	r31, r25
 7f6:	b0 80       	ld	r11, Z
 7f8:	a1 80       	ldd	r10, Z+1	; 0x01
 7fa:	92 80       	ldd	r9, Z+2	; 0x02
 7fc:	83 80       	ldd	r8, Z+3	; 0x03
 7fe:	2b 2d       	mov	r18, r11
 800:	3a 2d       	mov	r19, r10
 802:	49 2d       	mov	r20, r9
 804:	58 2d       	mov	r21, r8
 806:	6f 2d       	mov	r22, r15
 808:	7e 2d       	mov	r23, r14
 80a:	8d 2d       	mov	r24, r13
 80c:	9c 2d       	mov	r25, r12
 80e:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__gesf2>
 812:	18 16       	cp	r1, r24
 814:	24 f4       	brge	.+8      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 816:	bf 2c       	mov	r11, r15
 818:	ae 2c       	mov	r10, r14
 81a:	9d 2c       	mov	r9, r13
 81c:	8c 2c       	mov	r8, r12
 81e:	0f 5f       	subi	r16, 0xFF	; 255
 820:	1f 4f       	sbci	r17, 0xFF	; 255
 822:	f8 01       	movw	r30, r16
 824:	ee 0f       	add	r30, r30
 826:	ff 1f       	adc	r31, r31
 828:	ee 0f       	add	r30, r30
 82a:	ff 1f       	adc	r31, r31
 82c:	41 e0       	ldi	r20, 0x01	; 1
 82e:	50 e0       	ldi	r21, 0x00	; 0
 830:	4c 0f       	add	r20, r28
 832:	5d 1f       	adc	r21, r29
 834:	e4 0f       	add	r30, r20
 836:	f5 1f       	adc	r31, r21
 838:	f0 80       	ld	r15, Z
 83a:	e1 80       	ldd	r14, Z+1	; 0x01
 83c:	d2 80       	ldd	r13, Z+2	; 0x02
 83e:	c3 80       	ldd	r12, Z+3	; 0x03
 840:	2f 2d       	mov	r18, r15
 842:	3e 2d       	mov	r19, r14
 844:	4d 2d       	mov	r20, r13
 846:	5c 2d       	mov	r21, r12
 848:	6b 2d       	mov	r22, r11
 84a:	7a 2d       	mov	r23, r10
 84c:	89 2d       	mov	r24, r9
 84e:	98 2d       	mov	r25, r8
 850:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__subsf3>
 854:	20 e0       	ldi	r18, 0x00	; 0
 856:	30 e0       	ldi	r19, 0x00	; 0
 858:	a9 01       	movw	r20, r18
 85a:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__gesf2>
 85e:	18 16       	cp	r1, r24
 860:	24 f4       	brge	.+8      	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 862:	fb 2c       	mov	r15, r11
 864:	ea 2c       	mov	r14, r10
 866:	d9 2c       	mov	r13, r9
 868:	c8 2c       	mov	r12, r8
 86a:	03 30       	cpi	r16, 0x03	; 3
 86c:	11 05       	cpc	r17, r1
 86e:	0c f4       	brge	.+2      	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 870:	b7 cf       	rjmp	.-146    	; 0x7e0 <MAX+0x84>
 872:	6f 2d       	mov	r22, r15
 874:	7e 2d       	mov	r23, r14
 876:	8d 2d       	mov	r24, r13
 878:	9c 2d       	mov	r25, r12
 87a:	60 96       	adiw	r28, 0x10	; 16
 87c:	0f b6       	in	r0, 0x3f	; 63
 87e:	f8 94       	cli
 880:	de bf       	out	0x3e, r29	; 62
 882:	0f be       	out	0x3f, r0	; 63
 884:	cd bf       	out	0x3d, r28	; 61
 886:	df 91       	pop	r29
 888:	cf 91       	pop	r28
 88a:	1f 91       	pop	r17
 88c:	0f 91       	pop	r16
 88e:	ff 90       	pop	r15
 890:	ef 90       	pop	r14
 892:	df 90       	pop	r13
 894:	cf 90       	pop	r12
 896:	bf 90       	pop	r11
 898:	af 90       	pop	r10
 89a:	9f 90       	pop	r9
 89c:	8f 90       	pop	r8
 89e:	08 95       	ret

Disassembly of section .text.Obstacle_Avoider:

000012d8 <Obstacle_Avoider>:
	return MAX_VALUE;
}

bool Obstacle_Avoider()
{
   distance=ultarasonic_distance();
    12d8:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <ultarasonic_distance>
    12dc:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <distance+0x1>
    12e0:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <distance>
  
  if(distance<40)
    12e4:	88 97       	sbiw	r24, 0x28	; 40
    12e6:	24 f4       	brge	.+8      	; 0x12f0 <Obstacle_Avoider+0x18>
  { 
	 
    Obstacle = true;
    12e8:	81 e0       	ldi	r24, 0x01	; 1
    12ea:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    12ee:	02 c0       	rjmp	.+4      	; 0x12f4 <Obstacle_Avoider+0x1c>
  }
  else  
  {
  
    Obstacle = false;
    12f0:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
    12f4:	83 ec       	ldi	r24, 0xC3	; 195
    12f6:	99 e0       	ldi	r25, 0x09	; 9
    12f8:	01 97       	sbiw	r24, 0x01	; 1
    12fa:	f1 f7       	brne	.-4      	; 0x12f8 <Obstacle_Avoider+0x20>
    12fc:	00 c0       	rjmp	.+0      	; 0x12fe <Obstacle_Avoider+0x26>
    12fe:	00 00       	nop
  }  
  _delay_ms(10);
  return Obstacle;
}
    1300:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1304:	08 95       	ret

Disassembly of section .text.Update:

000008a0 <Update>:
			empty =false;
			break;
		}
	}
	return empty;
}
 8a0:	4f 92       	push	r4
 8a2:	5f 92       	push	r5
 8a4:	6f 92       	push	r6
 8a6:	7f 92       	push	r7
 8a8:	af 92       	push	r10
 8aa:	bf 92       	push	r11
 8ac:	cf 92       	push	r12
 8ae:	df 92       	push	r13
 8b0:	ef 92       	push	r14
 8b2:	ff 92       	push	r15
 8b4:	0f 93       	push	r16
 8b6:	1f 93       	push	r17
 8b8:	cf 93       	push	r28
 8ba:	df 93       	push	r29
 8bc:	cd b7       	in	r28, 0x3d	; 61
 8be:	de b7       	in	r29, 0x3e	; 62
 8c0:	28 97       	sbiw	r28, 0x08	; 8
 8c2:	0f b6       	in	r0, 0x3f	; 63
 8c4:	f8 94       	cli
 8c6:	de bf       	out	0x3e, r29	; 62
 8c8:	0f be       	out	0x3f, r0	; 63
 8ca:	cd bf       	out	0x3d, r28	; 61
 8cc:	62 95       	swap	r22
 8ce:	72 95       	swap	r23
 8d0:	70 7f       	andi	r23, 0xF0	; 240
 8d2:	76 27       	eor	r23, r22
 8d4:	60 7f       	andi	r22, 0xF0	; 240
 8d6:	76 27       	eor	r23, r22
 8d8:	68 0f       	add	r22, r24
 8da:	79 1f       	adc	r23, r25
 8dc:	22 0f       	add	r18, r18
 8de:	33 1f       	adc	r19, r19
 8e0:	22 0f       	add	r18, r18
 8e2:	33 1f       	adc	r19, r19
 8e4:	8b 01       	movw	r16, r22
 8e6:	02 0f       	add	r16, r18
 8e8:	13 1f       	adc	r17, r19
 8ea:	d8 01       	movw	r26, r16
 8ec:	4d 90       	ld	r4, X+
 8ee:	5d 90       	ld	r5, X+
 8f0:	6d 90       	ld	r6, X+
 8f2:	7c 90       	ld	r7, X
 8f4:	40 92 0f 01 	sts	0x010F, r4	; 0x80010f <Q_OLD>
 8f8:	50 92 10 01 	sts	0x0110, r5	; 0x800110 <Q_OLD+0x1>
 8fc:	60 92 11 01 	sts	0x0111, r6	; 0x800111 <Q_OLD+0x2>
 900:	70 92 12 01 	sts	0x0112, r7	; 0x800112 <Q_OLD+0x3>
 904:	ba 01       	movw	r22, r20
 906:	0e 94 ae 03 	call	0x75c	; 0x75c <MAX>
 90a:	69 83       	std	Y+1, r22	; 0x01
 90c:	7a 83       	std	Y+2, r23	; 0x02
 90e:	8b 83       	std	Y+3, r24	; 0x03
 910:	9c 83       	std	Y+4, r25	; 0x04
 912:	60 93 13 01 	sts	0x0113, r22	; 0x800113 <Q_MAX>
 916:	70 93 14 01 	sts	0x0114, r23	; 0x800114 <Q_MAX+0x1>
 91a:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Q_MAX+0x2>
 91e:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <Q_MAX+0x3>
 922:	a6 01       	movw	r20, r12
 924:	95 01       	movw	r18, r10
 926:	60 e0       	ldi	r22, 0x00	; 0
 928:	70 e0       	ldi	r23, 0x00	; 0
 92a:	80 e8       	ldi	r24, 0x80	; 128
 92c:	9f e3       	ldi	r25, 0x3F	; 63
 92e:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__subsf3>
 932:	9b 01       	movw	r18, r22
 934:	ac 01       	movw	r20, r24
 936:	c3 01       	movw	r24, r6
 938:	b2 01       	movw	r22, r4
 93a:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__mulsf3>
 93e:	6d 83       	std	Y+5, r22	; 0x05
 940:	7e 83       	std	Y+6, r23	; 0x06
 942:	8f 83       	std	Y+7, r24	; 0x07
 944:	98 87       	std	Y+8, r25	; 0x08
 946:	29 8d       	ldd	r18, Y+25	; 0x19
 948:	3a 8d       	ldd	r19, Y+26	; 0x1a
 94a:	4b 8d       	ldd	r20, Y+27	; 0x1b
 94c:	5c 8d       	ldd	r21, Y+28	; 0x1c
 94e:	69 81       	ldd	r22, Y+1	; 0x01
 950:	7a 81       	ldd	r23, Y+2	; 0x02
 952:	8b 81       	ldd	r24, Y+3	; 0x03
 954:	9c 81       	ldd	r25, Y+4	; 0x04
 956:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__mulsf3>
 95a:	2b 01       	movw	r4, r22
 95c:	3c 01       	movw	r6, r24
 95e:	b7 01       	movw	r22, r14
 960:	ff 0c       	add	r15, r15
 962:	88 0b       	sbc	r24, r24
 964:	99 0b       	sbc	r25, r25
 966:	0e 94 11 08 	call	0x1022	; 0x1022 <__floatsisf>
 96a:	a3 01       	movw	r20, r6
 96c:	92 01       	movw	r18, r4
 96e:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <__addsf3>
 972:	9b 01       	movw	r18, r22
 974:	ac 01       	movw	r20, r24
 976:	c6 01       	movw	r24, r12
 978:	b5 01       	movw	r22, r10
 97a:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__mulsf3>
 97e:	9b 01       	movw	r18, r22
 980:	ac 01       	movw	r20, r24
 982:	6d 81       	ldd	r22, Y+5	; 0x05
 984:	7e 81       	ldd	r23, Y+6	; 0x06
 986:	8f 81       	ldd	r24, Y+7	; 0x07
 988:	98 85       	ldd	r25, Y+8	; 0x08
 98a:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <__addsf3>
 98e:	60 93 05 01 	sts	0x0105, r22	; 0x800105 <Q_NEW>
 992:	70 93 06 01 	sts	0x0106, r23	; 0x800106 <Q_NEW+0x1>
 996:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Q_NEW+0x2>
 99a:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Q_NEW+0x3>
 99e:	f8 01       	movw	r30, r16
 9a0:	60 83       	st	Z, r22
 9a2:	71 83       	std	Z+1, r23	; 0x01
 9a4:	82 83       	std	Z+2, r24	; 0x02
 9a6:	93 83       	std	Z+3, r25	; 0x03
 9a8:	28 96       	adiw	r28, 0x08	; 8
 9aa:	0f b6       	in	r0, 0x3f	; 63
 9ac:	f8 94       	cli
 9ae:	de bf       	out	0x3e, r29	; 62
 9b0:	0f be       	out	0x3f, r0	; 63
 9b2:	cd bf       	out	0x3d, r28	; 61
 9b4:	df 91       	pop	r29
 9b6:	cf 91       	pop	r28
 9b8:	1f 91       	pop	r17
 9ba:	0f 91       	pop	r16
 9bc:	ff 90       	pop	r15
 9be:	ef 90       	pop	r14
 9c0:	df 90       	pop	r13
 9c2:	cf 90       	pop	r12
 9c4:	bf 90       	pop	r11
 9c6:	af 90       	pop	r10
 9c8:	7f 90       	pop	r7
 9ca:	6f 90       	pop	r6
 9cc:	5f 90       	pop	r5
 9ce:	4f 90       	pop	r4
 9d0:	08 95       	ret

Disassembly of section .text.ARGMAX:

00000480 <ARGMAX>:
 480:	6f 92       	push	r6
 482:	7f 92       	push	r7
 484:	8f 92       	push	r8
 486:	9f 92       	push	r9
 488:	af 92       	push	r10
 48a:	bf 92       	push	r11
 48c:	cf 92       	push	r12
 48e:	df 92       	push	r13
 490:	ef 92       	push	r14
 492:	ff 92       	push	r15
 494:	0f 93       	push	r16
 496:	1f 93       	push	r17
 498:	cf 93       	push	r28
 49a:	df 93       	push	r29
 49c:	cd b7       	in	r28, 0x3d	; 61
 49e:	de b7       	in	r29, 0x3e	; 62
 4a0:	60 97       	sbiw	r28, 0x10	; 16
 4a2:	0f b6       	in	r0, 0x3f	; 63
 4a4:	f8 94       	cli
 4a6:	de bf       	out	0x3e, r29	; 62
 4a8:	0f be       	out	0x3f, r0	; 63
 4aa:	cd bf       	out	0x3d, r28	; 61
 4ac:	40 e0       	ldi	r20, 0x00	; 0
 4ae:	50 e0       	ldi	r21, 0x00	; 0
 4b0:	20 c0       	rjmp	.+64     	; 0x4f2 <ARGMAX+0x72>
 4b2:	fb 01       	movw	r30, r22
 4b4:	e2 95       	swap	r30
 4b6:	f2 95       	swap	r31
 4b8:	f0 7f       	andi	r31, 0xF0	; 240
 4ba:	fe 27       	eor	r31, r30
 4bc:	e0 7f       	andi	r30, 0xF0	; 240
 4be:	fe 27       	eor	r31, r30
 4c0:	e8 0f       	add	r30, r24
 4c2:	f9 1f       	adc	r31, r25
 4c4:	9a 01       	movw	r18, r20
 4c6:	22 0f       	add	r18, r18
 4c8:	33 1f       	adc	r19, r19
 4ca:	22 0f       	add	r18, r18
 4cc:	33 1f       	adc	r19, r19
 4ce:	e2 0f       	add	r30, r18
 4d0:	f3 1f       	adc	r31, r19
 4d2:	c0 80       	ld	r12, Z
 4d4:	d1 80       	ldd	r13, Z+1	; 0x01
 4d6:	e2 80       	ldd	r14, Z+2	; 0x02
 4d8:	f3 80       	ldd	r15, Z+3	; 0x03
 4da:	e1 e0       	ldi	r30, 0x01	; 1
 4dc:	f0 e0       	ldi	r31, 0x00	; 0
 4de:	ec 0f       	add	r30, r28
 4e0:	fd 1f       	adc	r31, r29
 4e2:	e2 0f       	add	r30, r18
 4e4:	f3 1f       	adc	r31, r19
 4e6:	c0 82       	st	Z, r12
 4e8:	d1 82       	std	Z+1, r13	; 0x01
 4ea:	e2 82       	std	Z+2, r14	; 0x02
 4ec:	f3 82       	std	Z+3, r15	; 0x03
 4ee:	4f 5f       	subi	r20, 0xFF	; 255
 4f0:	5f 4f       	sbci	r21, 0xFF	; 255
 4f2:	44 30       	cpi	r20, 0x04	; 4
 4f4:	51 05       	cpc	r21, r1
 4f6:	ec f2       	brlt	.-70     	; 0x4b2 <ARGMAX+0x32>
 4f8:	00 e0       	ldi	r16, 0x00	; 0
 4fa:	10 e0       	ldi	r17, 0x00	; 0
 4fc:	c1 2c       	mov	r12, r1
 4fe:	d1 2c       	mov	r13, r1
 500:	f1 2c       	mov	r15, r1
 502:	e1 2c       	mov	r14, r1
 504:	45 c0       	rjmp	.+138    	; 0x590 <ARGMAX+0x110>
 506:	f8 01       	movw	r30, r16
 508:	ee 0f       	add	r30, r30
 50a:	ff 1f       	adc	r31, r31
 50c:	ee 0f       	add	r30, r30
 50e:	ff 1f       	adc	r31, r31
 510:	81 e0       	ldi	r24, 0x01	; 1
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	8c 0f       	add	r24, r28
 516:	9d 1f       	adc	r25, r29
 518:	e8 0f       	add	r30, r24
 51a:	f9 1f       	adc	r31, r25
 51c:	b0 80       	ld	r11, Z
 51e:	a1 80       	ldd	r10, Z+1	; 0x01
 520:	92 80       	ldd	r9, Z+2	; 0x02
 522:	83 80       	ldd	r8, Z+3	; 0x03
 524:	2b 2d       	mov	r18, r11
 526:	3a 2d       	mov	r19, r10
 528:	49 2d       	mov	r20, r9
 52a:	58 2d       	mov	r21, r8
 52c:	6c 2d       	mov	r22, r12
 52e:	7d 2d       	mov	r23, r13
 530:	8f 2d       	mov	r24, r15
 532:	9e 2d       	mov	r25, r14
 534:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__gesf2>
 538:	18 16       	cp	r1, r24
 53a:	24 f4       	brge	.+8      	; 0x544 <ARGMAX+0xc4>
 53c:	bc 2c       	mov	r11, r12
 53e:	ad 2c       	mov	r10, r13
 540:	9f 2c       	mov	r9, r15
 542:	8e 2c       	mov	r8, r14
 544:	0f 5f       	subi	r16, 0xFF	; 255
 546:	1f 4f       	sbci	r17, 0xFF	; 255
 548:	f8 01       	movw	r30, r16
 54a:	ee 0f       	add	r30, r30
 54c:	ff 1f       	adc	r31, r31
 54e:	ee 0f       	add	r30, r30
 550:	ff 1f       	adc	r31, r31
 552:	81 e0       	ldi	r24, 0x01	; 1
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	8c 0f       	add	r24, r28
 558:	9d 1f       	adc	r25, r29
 55a:	e8 0f       	add	r30, r24
 55c:	f9 1f       	adc	r31, r25
 55e:	c0 80       	ld	r12, Z
 560:	d1 80       	ldd	r13, Z+1	; 0x01
 562:	f2 80       	ldd	r15, Z+2	; 0x02
 564:	e3 80       	ldd	r14, Z+3	; 0x03
 566:	2c 2d       	mov	r18, r12
 568:	3d 2d       	mov	r19, r13
 56a:	4f 2d       	mov	r20, r15
 56c:	5e 2d       	mov	r21, r14
 56e:	6b 2d       	mov	r22, r11
 570:	7a 2d       	mov	r23, r10
 572:	89 2d       	mov	r24, r9
 574:	98 2d       	mov	r25, r8
 576:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__subsf3>
 57a:	20 e0       	ldi	r18, 0x00	; 0
 57c:	30 e0       	ldi	r19, 0x00	; 0
 57e:	a9 01       	movw	r20, r18
 580:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__gesf2>
 584:	18 16       	cp	r1, r24
 586:	24 f4       	brge	.+8      	; 0x590 <ARGMAX+0x110>
 588:	cb 2c       	mov	r12, r11
 58a:	da 2c       	mov	r13, r10
 58c:	f9 2c       	mov	r15, r9
 58e:	e8 2c       	mov	r14, r8
 590:	03 30       	cpi	r16, 0x03	; 3
 592:	11 05       	cpc	r17, r1
 594:	0c f4       	brge	.+2      	; 0x598 <ARGMAX+0x118>
 596:	b7 cf       	rjmp	.-146    	; 0x506 <ARGMAX+0x86>
 598:	00 e0       	ldi	r16, 0x00	; 0
 59a:	10 e0       	ldi	r17, 0x00	; 0
 59c:	19 c0       	rjmp	.+50     	; 0x5d0 <ARGMAX+0x150>
 59e:	f8 01       	movw	r30, r16
 5a0:	ee 0f       	add	r30, r30
 5a2:	ff 1f       	adc	r31, r31
 5a4:	ee 0f       	add	r30, r30
 5a6:	ff 1f       	adc	r31, r31
 5a8:	81 e0       	ldi	r24, 0x01	; 1
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	8c 0f       	add	r24, r28
 5ae:	9d 1f       	adc	r25, r29
 5b0:	e8 0f       	add	r30, r24
 5b2:	f9 1f       	adc	r31, r25
 5b4:	20 81       	ld	r18, Z
 5b6:	31 81       	ldd	r19, Z+1	; 0x01
 5b8:	42 81       	ldd	r20, Z+2	; 0x02
 5ba:	53 81       	ldd	r21, Z+3	; 0x03
 5bc:	6c 2d       	mov	r22, r12
 5be:	7d 2d       	mov	r23, r13
 5c0:	8f 2d       	mov	r24, r15
 5c2:	9e 2d       	mov	r25, r14
 5c4:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__cmpsf2>
 5c8:	88 23       	and	r24, r24
 5ca:	31 f0       	breq	.+12     	; 0x5d8 <ARGMAX+0x158>
 5cc:	0f 5f       	subi	r16, 0xFF	; 255
 5ce:	1f 4f       	sbci	r17, 0xFF	; 255
 5d0:	04 30       	cpi	r16, 0x04	; 4
 5d2:	11 05       	cpc	r17, r1
 5d4:	24 f3       	brlt	.-56     	; 0x59e <ARGMAX+0x11e>
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <ARGMAX+0x15c>
 5d8:	70 2e       	mov	r7, r16
 5da:	61 2e       	mov	r6, r17
 5dc:	87 2d       	mov	r24, r7
 5de:	96 2d       	mov	r25, r6
 5e0:	60 96       	adiw	r28, 0x10	; 16
 5e2:	0f b6       	in	r0, 0x3f	; 63
 5e4:	f8 94       	cli
 5e6:	de bf       	out	0x3e, r29	; 62
 5e8:	0f be       	out	0x3f, r0	; 63
 5ea:	cd bf       	out	0x3d, r28	; 61
 5ec:	df 91       	pop	r29
 5ee:	cf 91       	pop	r28
 5f0:	1f 91       	pop	r17
 5f2:	0f 91       	pop	r16
 5f4:	ff 90       	pop	r15
 5f6:	ef 90       	pop	r14
 5f8:	df 90       	pop	r13
 5fa:	cf 90       	pop	r12
 5fc:	bf 90       	pop	r11
 5fe:	af 90       	pop	r10
 600:	9f 90       	pop	r9
 602:	8f 90       	pop	r8
 604:	7f 90       	pop	r7
 606:	6f 90       	pop	r6
 608:	08 95       	ret

Disassembly of section .text.Train:

000000da <Train>:
  da:	af 92       	push	r10
  dc:	bf 92       	push	r11
  de:	cf 92       	push	r12
  e0:	df 92       	push	r13
  e2:	ef 92       	push	r14
  e4:	ff 92       	push	r15
  e6:	0f 93       	push	r16
  e8:	1f 93       	push	r17
  ea:	cf 93       	push	r28
  ec:	df 93       	push	r29
  ee:	c0 e0       	ldi	r28, 0x00	; 0
  f0:	d0 e0       	ldi	r29, 0x00	; 0
  f2:	b1 c1       	rjmp	.+866    	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
  f4:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <ACTION_TAKEN>
  f8:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <FLAG+0x1>
  fc:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <FLAG>
 100:	0e 94 9a 09 	call	0x1334	; 0x1334 <forward>
 104:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <Obstacle_Avoider>
 108:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 10c:	88 23       	and	r24, r24
 10e:	c1 f3       	breq	.-16     	; 0x100 <Train+0x26>
 110:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <STATE>
 114:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <STATE+0x1>
 118:	01 96       	adiw	r24, 0x01	; 1
 11a:	83 70       	andi	r24, 0x03	; 3
 11c:	90 78       	andi	r25, 0x80	; 128
 11e:	99 23       	and	r25, r25
 120:	24 f4       	brge	.+8      	; 0x12a <Train+0x50>
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	8c 6f       	ori	r24, 0xFC	; 252
 126:	9f 6f       	ori	r25, 0xFF	; 255
 128:	01 96       	adiw	r24, 0x01	; 1
 12a:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <NEXT_STATE+0x1>
 12e:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <NEXT_STATE>
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <FLAG+0x1>
 13a:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <FLAG>
 13e:	0e 94 40 0a 	call	0x1480	; 0x1480 <RANDOM>
 142:	60 93 0b 01 	sts	0x010B, r22	; 0x80010b <PROB>
 146:	70 93 0c 01 	sts	0x010C, r23	; 0x80010c <PROB+0x1>
 14a:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <PROB+0x2>
 14e:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <PROB+0x3>
 152:	20 91 81 01 	lds	r18, 0x0181	; 0x800181 <EPSILON>
 156:	30 91 82 01 	lds	r19, 0x0182	; 0x800182 <EPSILON+0x1>
 15a:	40 91 83 01 	lds	r20, 0x0183	; 0x800183 <EPSILON+0x2>
 15e:	50 91 84 01 	lds	r21, 0x0184	; 0x800184 <EPSILON+0x3>
 162:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__cmpsf2>
 166:	18 16       	cp	r1, r24
 168:	ac f0       	brlt	.+42     	; 0x194 <Train+0xba>
 16a:	0e 94 31 07 	call	0xe62	; 0xe62 <rand>
 16e:	83 70       	andi	r24, 0x03	; 3
 170:	90 78       	andi	r25, 0x80	; 128
 172:	99 23       	and	r25, r25
 174:	24 f4       	brge	.+8      	; 0x17e <Train+0xa4>
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	8c 6f       	ori	r24, 0xFC	; 252
 17a:	9f 6f       	ori	r25, 0xFF	; 255
 17c:	01 96       	adiw	r24, 0x01	; 1
 17e:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <ACTION+0x1>
 182:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <ACTION>
 186:	82 e0       	ldi	r24, 0x02	; 2
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <FLAG+0x1>
 18e:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <FLAG>
 192:	12 c0       	rjmp	.+36     	; 0x1b8 <Train+0xde>
 194:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <STATE>
 198:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <STATE+0x1>
 19c:	89 e1       	ldi	r24, 0x19	; 25
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	0e 94 40 02 	call	0x480	; 0x480 <ARGMAX>
 1a4:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <ACTION+0x1>
 1a8:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <ACTION>
 1ac:	82 e0       	ldi	r24, 0x02	; 2
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <FLAG+0x1>
 1b4:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <FLAG>
 1b8:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <FLAG>
 1bc:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <FLAG+0x1>
 1c0:	02 97       	sbiw	r24, 0x02	; 2
 1c2:	09 f0       	breq	.+2      	; 0x1c6 <Train+0xec>
 1c4:	de c0       	rjmp	.+444    	; 0x382 <Train+0x2a8>
 1c6:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 1ca:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 1ce:	89 2b       	or	r24, r25
 1d0:	69 f5       	brne	.+90     	; 0x22c <Train+0x152>
 1d2:	41 e0       	ldi	r20, 0x01	; 1
 1d4:	64 e0       	ldi	r22, 0x04	; 4
 1d6:	82 e0       	ldi	r24, 0x02	; 2
 1d8:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 1dc:	2f e7       	ldi	r18, 0x7F	; 127
 1de:	84 e8       	ldi	r24, 0x84	; 132
 1e0:	9e e1       	ldi	r25, 0x1E	; 30
 1e2:	21 50       	subi	r18, 0x01	; 1
 1e4:	80 40       	sbci	r24, 0x00	; 0
 1e6:	90 40       	sbci	r25, 0x00	; 0
 1e8:	e1 f7       	brne	.-8      	; 0x1e2 <Train+0x108>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <Train+0x112>
 1ec:	00 00       	nop
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	64 e0       	ldi	r22, 0x04	; 4
 1f2:	82 e0       	ldi	r24, 0x02	; 2
 1f4:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 1f8:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 1fc:	e0 91 93 01 	lds	r30, 0x0193	; 0x800193 <STATE>
 200:	f0 91 94 01 	lds	r31, 0x0194	; 0x800194 <STATE+0x1>
 204:	ee 0f       	add	r30, r30
 206:	ff 1f       	adc	r31, r31
 208:	ee 0f       	add	r30, r30
 20a:	ff 1f       	adc	r31, r31
 20c:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 210:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 214:	e8 0f       	add	r30, r24
 216:	f9 1f       	adc	r31, r25
 218:	ee 0f       	add	r30, r30
 21a:	ff 1f       	adc	r31, r31
 21c:	e7 5a       	subi	r30, 0xA7	; 167
 21e:	fe 4f       	sbci	r31, 0xFE	; 254
 220:	80 81       	ld	r24, Z
 222:	91 81       	ldd	r25, Z+1	; 0x01
 224:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <REWARD+0x1>
 228:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <REWARD>
 22c:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 230:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 234:	01 97       	sbiw	r24, 0x01	; 1
 236:	79 f5       	brne	.+94     	; 0x296 <Train+0x1bc>
 238:	0e 94 af 09 	call	0x135e	; 0x135e <backward>
 23c:	41 e0       	ldi	r20, 0x01	; 1
 23e:	63 e0       	ldi	r22, 0x03	; 3
 240:	82 e0       	ldi	r24, 0x02	; 2
 242:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 246:	2f e7       	ldi	r18, 0x7F	; 127
 248:	84 e8       	ldi	r24, 0x84	; 132
 24a:	9e e1       	ldi	r25, 0x1E	; 30
 24c:	21 50       	subi	r18, 0x01	; 1
 24e:	80 40       	sbci	r24, 0x00	; 0
 250:	90 40       	sbci	r25, 0x00	; 0
 252:	e1 f7       	brne	.-8      	; 0x24c <Train+0x172>
 254:	00 c0       	rjmp	.+0      	; 0x256 <Train+0x17c>
 256:	00 00       	nop
 258:	40 e0       	ldi	r20, 0x00	; 0
 25a:	63 e0       	ldi	r22, 0x03	; 3
 25c:	82 e0       	ldi	r24, 0x02	; 2
 25e:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 262:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 266:	e0 91 93 01 	lds	r30, 0x0193	; 0x800193 <STATE>
 26a:	f0 91 94 01 	lds	r31, 0x0194	; 0x800194 <STATE+0x1>
 26e:	ee 0f       	add	r30, r30
 270:	ff 1f       	adc	r31, r31
 272:	ee 0f       	add	r30, r30
 274:	ff 1f       	adc	r31, r31
 276:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 27a:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 27e:	e8 0f       	add	r30, r24
 280:	f9 1f       	adc	r31, r25
 282:	ee 0f       	add	r30, r30
 284:	ff 1f       	adc	r31, r31
 286:	e7 5a       	subi	r30, 0xA7	; 167
 288:	fe 4f       	sbci	r31, 0xFE	; 254
 28a:	80 81       	ld	r24, Z
 28c:	91 81       	ldd	r25, Z+1	; 0x01
 28e:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <REWARD+0x1>
 292:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <REWARD>
 296:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 29a:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 29e:	02 97       	sbiw	r24, 0x02	; 2
 2a0:	79 f5       	brne	.+94     	; 0x300 <Train+0x226>
 2a2:	0e 94 c4 09 	call	0x1388	; 0x1388 <right>
 2a6:	41 e0       	ldi	r20, 0x01	; 1
 2a8:	62 e0       	ldi	r22, 0x02	; 2
 2aa:	82 e0       	ldi	r24, 0x02	; 2
 2ac:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 2b0:	2f e7       	ldi	r18, 0x7F	; 127
 2b2:	84 e8       	ldi	r24, 0x84	; 132
 2b4:	9e e1       	ldi	r25, 0x1E	; 30
 2b6:	21 50       	subi	r18, 0x01	; 1
 2b8:	80 40       	sbci	r24, 0x00	; 0
 2ba:	90 40       	sbci	r25, 0x00	; 0
 2bc:	e1 f7       	brne	.-8      	; 0x2b6 <Train+0x1dc>
 2be:	00 c0       	rjmp	.+0      	; 0x2c0 <Train+0x1e6>
 2c0:	00 00       	nop
 2c2:	40 e0       	ldi	r20, 0x00	; 0
 2c4:	62 e0       	ldi	r22, 0x02	; 2
 2c6:	82 e0       	ldi	r24, 0x02	; 2
 2c8:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 2cc:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 2d0:	e0 91 93 01 	lds	r30, 0x0193	; 0x800193 <STATE>
 2d4:	f0 91 94 01 	lds	r31, 0x0194	; 0x800194 <STATE+0x1>
 2d8:	ee 0f       	add	r30, r30
 2da:	ff 1f       	adc	r31, r31
 2dc:	ee 0f       	add	r30, r30
 2de:	ff 1f       	adc	r31, r31
 2e0:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 2e4:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 2e8:	e8 0f       	add	r30, r24
 2ea:	f9 1f       	adc	r31, r25
 2ec:	ee 0f       	add	r30, r30
 2ee:	ff 1f       	adc	r31, r31
 2f0:	e7 5a       	subi	r30, 0xA7	; 167
 2f2:	fe 4f       	sbci	r31, 0xFE	; 254
 2f4:	80 81       	ld	r24, Z
 2f6:	91 81       	ldd	r25, Z+1	; 0x01
 2f8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <REWARD+0x1>
 2fc:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <REWARD>
 300:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 304:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 308:	03 97       	sbiw	r24, 0x03	; 3
 30a:	79 f5       	brne	.+94     	; 0x36a <Train+0x290>
 30c:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <left>
 310:	41 e0       	ldi	r20, 0x01	; 1
 312:	61 e0       	ldi	r22, 0x01	; 1
 314:	82 e0       	ldi	r24, 0x02	; 2
 316:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 31a:	2f e7       	ldi	r18, 0x7F	; 127
 31c:	84 e8       	ldi	r24, 0x84	; 132
 31e:	9e e1       	ldi	r25, 0x1E	; 30
 320:	21 50       	subi	r18, 0x01	; 1
 322:	80 40       	sbci	r24, 0x00	; 0
 324:	90 40       	sbci	r25, 0x00	; 0
 326:	e1 f7       	brne	.-8      	; 0x320 <Train+0x246>
 328:	00 c0       	rjmp	.+0      	; 0x32a <Train+0x250>
 32a:	00 00       	nop
 32c:	40 e0       	ldi	r20, 0x00	; 0
 32e:	61 e0       	ldi	r22, 0x01	; 1
 330:	82 e0       	ldi	r24, 0x02	; 2
 332:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 336:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 33a:	e0 91 93 01 	lds	r30, 0x0193	; 0x800193 <STATE>
 33e:	f0 91 94 01 	lds	r31, 0x0194	; 0x800194 <STATE+0x1>
 342:	ee 0f       	add	r30, r30
 344:	ff 1f       	adc	r31, r31
 346:	ee 0f       	add	r30, r30
 348:	ff 1f       	adc	r31, r31
 34a:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 34e:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 352:	e8 0f       	add	r30, r24
 354:	f9 1f       	adc	r31, r25
 356:	ee 0f       	add	r30, r30
 358:	ff 1f       	adc	r31, r31
 35a:	e7 5a       	subi	r30, 0xA7	; 167
 35c:	fe 4f       	sbci	r31, 0xFE	; 254
 35e:	80 81       	ld	r24, Z
 360:	91 81       	ldd	r25, Z+1	; 0x01
 362:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <REWARD+0x1>
 366:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <REWARD>
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <ACTION_TAKEN>
 370:	2f e9       	ldi	r18, 0x9F	; 159
 372:	86 e8       	ldi	r24, 0x86	; 134
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	21 50       	subi	r18, 0x01	; 1
 378:	80 40       	sbci	r24, 0x00	; 0
 37a:	90 40       	sbci	r25, 0x00	; 0
 37c:	e1 f7       	brne	.-8      	; 0x376 <Train+0x29c>
 37e:	00 c0       	rjmp	.+0      	; 0x380 <Train+0x2a6>
 380:	00 00       	nop
 382:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <ACTION_TAKEN>
 386:	88 23       	and	r24, r24
 388:	09 f4       	brne	.+2      	; 0x38c <Train+0x2b2>
 38a:	64 c0       	rjmp	.+200    	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 38c:	a0 90 89 01 	lds	r10, 0x0189	; 0x800189 <ALPHA>
 390:	b0 90 8a 01 	lds	r11, 0x018A	; 0x80018a <ALPHA+0x1>
 394:	c0 90 8b 01 	lds	r12, 0x018B	; 0x80018b <ALPHA+0x2>
 398:	d0 90 8c 01 	lds	r13, 0x018C	; 0x80018c <ALPHA+0x3>
 39c:	e0 90 01 01 	lds	r14, 0x0101	; 0x800101 <REWARD>
 3a0:	f0 90 02 01 	lds	r15, 0x0102	; 0x800102 <REWARD+0x1>
 3a4:	20 91 91 01 	lds	r18, 0x0191	; 0x800191 <ACTION>
 3a8:	30 91 92 01 	lds	r19, 0x0192	; 0x800192 <ACTION+0x1>
 3ac:	40 91 09 01 	lds	r20, 0x0109	; 0x800109 <NEXT_STATE>
 3b0:	50 91 0a 01 	lds	r21, 0x010A	; 0x80010a <NEXT_STATE+0x1>
 3b4:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <STATE>
 3b8:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <STATE+0x1>
 3bc:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <GAMMA+0x3>
 3c0:	8f 93       	push	r24
 3c2:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <GAMMA+0x2>
 3c6:	8f 93       	push	r24
 3c8:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <GAMMA+0x1>
 3cc:	8f 93       	push	r24
 3ce:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <GAMMA>
 3d2:	8f 93       	push	r24
 3d4:	09 e7       	ldi	r16, 0x79	; 121
 3d6:	11 e0       	ldi	r17, 0x01	; 1
 3d8:	89 e1       	ldi	r24, 0x19	; 25
 3da:	91 e0       	ldi	r25, 0x01	; 1
 3dc:	0e 94 50 04 	call	0x8a0	; 0x8a0 <Update>
 3e0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <NEXT_STATE>
 3e4:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <NEXT_STATE+0x1>
 3e8:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <STATE+0x1>
 3ec:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <STATE>
 3f0:	60 91 81 01 	lds	r22, 0x0181	; 0x800181 <EPSILON>
 3f4:	70 91 82 01 	lds	r23, 0x0182	; 0x800182 <EPSILON+0x1>
 3f8:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <EPSILON+0x2>
 3fc:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <EPSILON+0x3>
 400:	0e 94 c9 0a 	call	0x1592	; 0x1592 <DECAY>
 404:	60 93 81 01 	sts	0x0181, r22	; 0x800181 <EPSILON>
 408:	70 93 82 01 	sts	0x0182, r23	; 0x800182 <EPSILON+0x1>
 40c:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <EPSILON+0x2>
 410:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <EPSILON+0x3>
 414:	2f e9       	ldi	r18, 0x9F	; 159
 416:	86 e8       	ldi	r24, 0x86	; 134
 418:	91 e0       	ldi	r25, 0x01	; 1
 41a:	21 50       	subi	r18, 0x01	; 1
 41c:	80 40       	sbci	r24, 0x00	; 0
 41e:	90 40       	sbci	r25, 0x00	; 0
 420:	e1 f7       	brne	.-8      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 422:	00 c0       	rjmp	.+0      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 424:	00 00       	nop
 426:	41 e0       	ldi	r20, 0x01	; 1
 428:	65 e0       	ldi	r22, 0x05	; 5
 42a:	82 e0       	ldi	r24, 0x02	; 2
 42c:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 430:	2f e9       	ldi	r18, 0x9F	; 159
 432:	86 e8       	ldi	r24, 0x86	; 134
 434:	91 e0       	ldi	r25, 0x01	; 1
 436:	21 50       	subi	r18, 0x01	; 1
 438:	80 40       	sbci	r24, 0x00	; 0
 43a:	90 40       	sbci	r25, 0x00	; 0
 43c:	e1 f7       	brne	.-8      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 440:	00 00       	nop
 442:	40 e0       	ldi	r20, 0x00	; 0
 444:	65 e0       	ldi	r22, 0x05	; 5
 446:	82 e0       	ldi	r24, 0x02	; 2
 448:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 44c:	0f 90       	pop	r0
 44e:	0f 90       	pop	r0
 450:	0f 90       	pop	r0
 452:	0f 90       	pop	r0
 454:	21 96       	adiw	r28, 0x01	; 1
 456:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <EPISODES>
 45a:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <EPISODES+0x1>
 45e:	c8 17       	cp	r28, r24
 460:	d9 07       	cpc	r29, r25
 462:	0c f4       	brge	.+2      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 464:	47 ce       	rjmp	.-882    	; 0xf4 <Train+0x1a>
 466:	0e 94 4c 08 	call	0x1098	; 0x1098 <save_q_table>
 46a:	df 91       	pop	r29
 46c:	cf 91       	pop	r28
 46e:	1f 91       	pop	r17
 470:	0f 91       	pop	r16
 472:	ff 90       	pop	r15
 474:	ef 90       	pop	r14
 476:	df 90       	pop	r13
 478:	cf 90       	pop	r12
 47a:	bf 90       	pop	r11
 47c:	af 90       	pop	r10
 47e:	08 95       	ret

Disassembly of section .text.Test:

0000060a <Test>:
 60a:	0e 94 82 08 	call	0x1104	; 0x1104 <retrive_q_table>
 60e:	41 e0       	ldi	r20, 0x01	; 1
 610:	65 e0       	ldi	r22, 0x05	; 5
 612:	82 e0       	ldi	r24, 0x02	; 2
 614:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 618:	0e 94 9a 09 	call	0x1334	; 0x1334 <forward>
 61c:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <Obstacle_Avoider>
 620:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 624:	88 23       	and	r24, r24
 626:	c1 f3       	breq	.-16     	; 0x618 <Test+0xe>
 628:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 62c:	2f eb       	ldi	r18, 0xBF	; 191
 62e:	87 e2       	ldi	r24, 0x27	; 39
 630:	99 e0       	ldi	r25, 0x09	; 9
 632:	21 50       	subi	r18, 0x01	; 1
 634:	80 40       	sbci	r24, 0x00	; 0
 636:	90 40       	sbci	r25, 0x00	; 0
 638:	e1 f7       	brne	.-8      	; 0x632 <Test+0x28>
 63a:	00 c0       	rjmp	.+0      	; 0x63c <Test+0x32>
 63c:	00 00       	nop
 63e:	0e 94 3f 07 	call	0xe7e	; 0xe7e <GET_STATE>
 642:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <STATE+0x1>
 646:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <STATE>
 64a:	bc 01       	movw	r22, r24
 64c:	89 e1       	ldi	r24, 0x19	; 25
 64e:	91 e0       	ldi	r25, 0x01	; 1
 650:	0e 94 40 02 	call	0x480	; 0x480 <ARGMAX>
 654:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <ACTION+0x1>
 658:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <ACTION>
 65c:	89 2b       	or	r24, r25
 65e:	59 f4       	brne	.+22     	; 0x676 <Test+0x6c>
 660:	2f e7       	ldi	r18, 0x7F	; 127
 662:	84 e8       	ldi	r24, 0x84	; 132
 664:	9e e1       	ldi	r25, 0x1E	; 30
 666:	21 50       	subi	r18, 0x01	; 1
 668:	80 40       	sbci	r24, 0x00	; 0
 66a:	90 40       	sbci	r25, 0x00	; 0
 66c:	e1 f7       	brne	.-8      	; 0x666 <Test+0x5c>
 66e:	00 c0       	rjmp	.+0      	; 0x670 <Test+0x66>
 670:	00 00       	nop
 672:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 676:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 67a:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 67e:	01 97       	sbiw	r24, 0x01	; 1
 680:	b9 f4       	brne	.+46     	; 0x6b0 <Test+0xa6>
 682:	0e 94 af 09 	call	0x135e	; 0x135e <backward>
 686:	41 e0       	ldi	r20, 0x01	; 1
 688:	63 e0       	ldi	r22, 0x03	; 3
 68a:	82 e0       	ldi	r24, 0x02	; 2
 68c:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 690:	2f e7       	ldi	r18, 0x7F	; 127
 692:	84 e8       	ldi	r24, 0x84	; 132
 694:	9e e1       	ldi	r25, 0x1E	; 30
 696:	21 50       	subi	r18, 0x01	; 1
 698:	80 40       	sbci	r24, 0x00	; 0
 69a:	90 40       	sbci	r25, 0x00	; 0
 69c:	e1 f7       	brne	.-8      	; 0x696 <Test+0x8c>
 69e:	00 c0       	rjmp	.+0      	; 0x6a0 <Test+0x96>
 6a0:	00 00       	nop
 6a2:	40 e0       	ldi	r20, 0x00	; 0
 6a4:	63 e0       	ldi	r22, 0x03	; 3
 6a6:	82 e0       	ldi	r24, 0x02	; 2
 6a8:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 6ac:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 6b0:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 6b4:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 6b8:	02 97       	sbiw	r24, 0x02	; 2
 6ba:	21 f5       	brne	.+72     	; 0x704 <Test+0xfa>
 6bc:	0e 94 af 09 	call	0x135e	; 0x135e <backward>
 6c0:	2f eb       	ldi	r18, 0xBF	; 191
 6c2:	87 e2       	ldi	r24, 0x27	; 39
 6c4:	99 e0       	ldi	r25, 0x09	; 9
 6c6:	21 50       	subi	r18, 0x01	; 1
 6c8:	80 40       	sbci	r24, 0x00	; 0
 6ca:	90 40       	sbci	r25, 0x00	; 0
 6cc:	e1 f7       	brne	.-8      	; 0x6c6 <Test+0xbc>
 6ce:	00 c0       	rjmp	.+0      	; 0x6d0 <Test+0xc6>
 6d0:	00 00       	nop
 6d2:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 6d6:	0e 94 c4 09 	call	0x1388	; 0x1388 <right>
 6da:	41 e0       	ldi	r20, 0x01	; 1
 6dc:	62 e0       	ldi	r22, 0x02	; 2
 6de:	82 e0       	ldi	r24, 0x02	; 2
 6e0:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 6e4:	2f e7       	ldi	r18, 0x7F	; 127
 6e6:	84 e8       	ldi	r24, 0x84	; 132
 6e8:	9e e1       	ldi	r25, 0x1E	; 30
 6ea:	21 50       	subi	r18, 0x01	; 1
 6ec:	80 40       	sbci	r24, 0x00	; 0
 6ee:	90 40       	sbci	r25, 0x00	; 0
 6f0:	e1 f7       	brne	.-8      	; 0x6ea <Test+0xe0>
 6f2:	00 c0       	rjmp	.+0      	; 0x6f4 <Test+0xea>
 6f4:	00 00       	nop
 6f6:	40 e0       	ldi	r20, 0x00	; 0
 6f8:	62 e0       	ldi	r22, 0x02	; 2
 6fa:	82 e0       	ldi	r24, 0x02	; 2
 6fc:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 700:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 704:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <ACTION>
 708:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ACTION+0x1>
 70c:	03 97       	sbiw	r24, 0x03	; 3
 70e:	09 f0       	breq	.+2      	; 0x712 <Test+0x108>
 710:	83 cf       	rjmp	.-250    	; 0x618 <Test+0xe>
 712:	0e 94 af 09 	call	0x135e	; 0x135e <backward>
 716:	2f eb       	ldi	r18, 0xBF	; 191
 718:	87 e2       	ldi	r24, 0x27	; 39
 71a:	99 e0       	ldi	r25, 0x09	; 9
 71c:	21 50       	subi	r18, 0x01	; 1
 71e:	80 40       	sbci	r24, 0x00	; 0
 720:	90 40       	sbci	r25, 0x00	; 0
 722:	e1 f7       	brne	.-8      	; 0x71c <Test+0x112>
 724:	00 c0       	rjmp	.+0      	; 0x726 <Test+0x11c>
 726:	00 00       	nop
 728:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 72c:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <left>
 730:	41 e0       	ldi	r20, 0x01	; 1
 732:	61 e0       	ldi	r22, 0x01	; 1
 734:	82 e0       	ldi	r24, 0x02	; 2
 736:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 73a:	2f e7       	ldi	r18, 0x7F	; 127
 73c:	84 e8       	ldi	r24, 0x84	; 132
 73e:	9e e1       	ldi	r25, 0x1E	; 30
 740:	21 50       	subi	r18, 0x01	; 1
 742:	80 40       	sbci	r24, 0x00	; 0
 744:	90 40       	sbci	r25, 0x00	; 0
 746:	e1 f7       	brne	.-8      	; 0x740 <Test+0x136>
 748:	00 c0       	rjmp	.+0      	; 0x74a <Test+0x140>
 74a:	00 00       	nop
 74c:	40 e0       	ldi	r20, 0x00	; 0
 74e:	61 e0       	ldi	r22, 0x01	; 1
 750:	82 e0       	ldi	r24, 0x02	; 2
 752:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 756:	0e 94 ee 09 	call	0x13dc	; 0x13dc <stop>
 75a:	5e cf       	rjmp	.-324    	; 0x618 <Test+0xe>

Disassembly of section .text.config_RC_Driver:

000014a6 <config_RC_Driver>:
#include "RC_Controling_interface.h"
 #include <avr/io.h>
 
void config_RC_Driver()
{
	DIO_SetPinDirection(PORT3 , 5 , OUTPUT);
    14a6:	41 e0       	ldi	r20, 0x01	; 1
    14a8:	65 e0       	ldi	r22, 0x05	; 5
    14aa:	83 e0       	ldi	r24, 0x03	; 3
    14ac:	0e 94 29 06 	call	0xc52	; 0xc52 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORT3 , 6 , OUTPUT);
    14b0:	41 e0       	ldi	r20, 0x01	; 1
    14b2:	66 e0       	ldi	r22, 0x06	; 6
    14b4:	83 e0       	ldi	r24, 0x03	; 3
    14b6:	0e 94 29 06 	call	0xc52	; 0xc52 <DIO_SetPinDirection>
	TCCR0A |= (1 << WGM01) | (1 << WGM00) | (1 << COM0A0);
    14ba:	84 b5       	in	r24, 0x24	; 36
    14bc:	83 64       	ori	r24, 0x43	; 67
    14be:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << WGM02) | (1 << CS00);
    14c0:	85 b5       	in	r24, 0x25	; 37
    14c2:	89 60       	ori	r24, 0x09	; 9
    14c4:	85 bd       	out	0x25, r24	; 37
	OCR0A = 80;
    14c6:	80 e5       	ldi	r24, 0x50	; 80
    14c8:	87 bd       	out	0x27, r24	; 39
    14ca:	08 95       	ret

Disassembly of section .text.forward:

00001334 <forward>:
}
void forward(){
 DIO_SetPinValue(PORT3,0,1);
    1334:	41 e0       	ldi	r20, 0x01	; 1
    1336:	60 e0       	ldi	r22, 0x00	; 0
    1338:	83 e0       	ldi	r24, 0x03	; 3
    133a:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,1,0);
    133e:	40 e0       	ldi	r20, 0x00	; 0
    1340:	61 e0       	ldi	r22, 0x01	; 1
    1342:	83 e0       	ldi	r24, 0x03	; 3
    1344:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,2,1);
    1348:	41 e0       	ldi	r20, 0x01	; 1
    134a:	62 e0       	ldi	r22, 0x02	; 2
    134c:	83 e0       	ldi	r24, 0x03	; 3
    134e:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,3,0);
    1352:	40 e0       	ldi	r20, 0x00	; 0
    1354:	63 e0       	ldi	r22, 0x03	; 3
    1356:	83 e0       	ldi	r24, 0x03	; 3
    1358:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
    135c:	08 95       	ret

Disassembly of section .text.backward:

0000135e <backward>:
}

 void backward(){
 DIO_SetPinValue(PORT3,0,0);
    135e:	40 e0       	ldi	r20, 0x00	; 0
    1360:	60 e0       	ldi	r22, 0x00	; 0
    1362:	83 e0       	ldi	r24, 0x03	; 3
    1364:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,1,1);
    1368:	41 e0       	ldi	r20, 0x01	; 1
    136a:	61 e0       	ldi	r22, 0x01	; 1
    136c:	83 e0       	ldi	r24, 0x03	; 3
    136e:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,2,0);
    1372:	40 e0       	ldi	r20, 0x00	; 0
    1374:	62 e0       	ldi	r22, 0x02	; 2
    1376:	83 e0       	ldi	r24, 0x03	; 3
    1378:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
 DIO_SetPinValue(PORT3,3,1);
    137c:	41 e0       	ldi	r20, 0x01	; 1
    137e:	63 e0       	ldi	r22, 0x03	; 3
    1380:	83 e0       	ldi	r24, 0x03	; 3
    1382:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
    1386:	08 95       	ret

Disassembly of section .text.right:

00001388 <right>:
 }
 
 void right(){
	 DIO_SetPinValue(PORT3,0,1);
    1388:	41 e0       	ldi	r20, 0x01	; 1
    138a:	60 e0       	ldi	r22, 0x00	; 0
    138c:	83 e0       	ldi	r24, 0x03	; 3
    138e:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,1,0);
    1392:	40 e0       	ldi	r20, 0x00	; 0
    1394:	61 e0       	ldi	r22, 0x01	; 1
    1396:	83 e0       	ldi	r24, 0x03	; 3
    1398:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,2,0);
    139c:	40 e0       	ldi	r20, 0x00	; 0
    139e:	62 e0       	ldi	r22, 0x02	; 2
    13a0:	83 e0       	ldi	r24, 0x03	; 3
    13a2:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,3,1);
    13a6:	41 e0       	ldi	r20, 0x01	; 1
    13a8:	63 e0       	ldi	r22, 0x03	; 3
    13aa:	83 e0       	ldi	r24, 0x03	; 3
    13ac:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
    13b0:	08 95       	ret

Disassembly of section .text.left:

000013b2 <left>:
 
 }

 void left() {
	 DIO_SetPinValue(PORT3,0,0);
    13b2:	40 e0       	ldi	r20, 0x00	; 0
    13b4:	60 e0       	ldi	r22, 0x00	; 0
    13b6:	83 e0       	ldi	r24, 0x03	; 3
    13b8:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,1,1);
    13bc:	41 e0       	ldi	r20, 0x01	; 1
    13be:	61 e0       	ldi	r22, 0x01	; 1
    13c0:	83 e0       	ldi	r24, 0x03	; 3
    13c2:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,2,1);
    13c6:	41 e0       	ldi	r20, 0x01	; 1
    13c8:	62 e0       	ldi	r22, 0x02	; 2
    13ca:	83 e0       	ldi	r24, 0x03	; 3
    13cc:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	 DIO_SetPinValue(PORT3,3,0);
    13d0:	40 e0       	ldi	r20, 0x00	; 0
    13d2:	63 e0       	ldi	r22, 0x03	; 3
    13d4:	83 e0       	ldi	r24, 0x03	; 3
    13d6:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
    13da:	08 95       	ret

Disassembly of section .text.stop:

000013dc <stop>:
 }
 
 void stop(){
	  DIO_SetPinValue(PORT3,0,0);
    13dc:	40 e0       	ldi	r20, 0x00	; 0
    13de:	60 e0       	ldi	r22, 0x00	; 0
    13e0:	83 e0       	ldi	r24, 0x03	; 3
    13e2:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	  DIO_SetPinValue(PORT3,1,0);
    13e6:	40 e0       	ldi	r20, 0x00	; 0
    13e8:	61 e0       	ldi	r22, 0x01	; 1
    13ea:	83 e0       	ldi	r24, 0x03	; 3
    13ec:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	  DIO_SetPinValue(PORT3,2,0);
    13f0:	40 e0       	ldi	r20, 0x00	; 0
    13f2:	62 e0       	ldi	r22, 0x02	; 2
    13f4:	83 e0       	ldi	r24, 0x03	; 3
    13f6:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	  DIO_SetPinValue(PORT3,3,0);
    13fa:	40 e0       	ldi	r20, 0x00	; 0
    13fc:	63 e0       	ldi	r22, 0x03	; 3
    13fe:	83 e0       	ldi	r24, 0x03	; 3
    1400:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
    1404:	08 95       	ret

Disassembly of section .text.config_servo_timer:

00001170 <config_servo_timer>:
#include <avr/interrupt.h>

 
void config_servo_timer()
{
	DIO_SetPinDirection(PORT1,1,OUTPUT); //set portB pin 1 as output (OC1A)
    1170:	41 e0       	ldi	r20, 0x01	; 1
    1172:	61 e0       	ldi	r22, 0x01	; 1
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	0e 94 29 06 	call	0xc52	; 0xc52 <DIO_SetPinDirection>
	SET_BIT(TCCR1B,CS10);//
    117a:	e1 e8       	ldi	r30, 0x81	; 129
    117c:	f0 e0       	ldi	r31, 0x00	; 0
    117e:	80 81       	ld	r24, Z
    1180:	81 60       	ori	r24, 0x01	; 1
    1182:	80 83       	st	Z, r24
	SET_BIT(TCCR1B,CS11);// SET pre_scaler value = 64
    1184:	80 81       	ld	r24, Z
    1186:	82 60       	ori	r24, 0x02	; 2
    1188:	80 83       	st	Z, r24
	CLR_BIT(TCCR1B,CS12);//
    118a:	80 81       	ld	r24, Z
    118c:	8b 7f       	andi	r24, 0xFB	; 251
    118e:	80 83       	st	Z, r24
	
	SET_BIT(TCCR1A,WGM11);//
    1190:	a0 e8       	ldi	r26, 0x80	; 128
    1192:	b0 e0       	ldi	r27, 0x00	; 0
    1194:	8c 91       	ld	r24, X
    1196:	82 60       	ori	r24, 0x02	; 2
    1198:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,WGM12);// FAST PWM mode;
    119a:	80 81       	ld	r24, Z
    119c:	88 60       	ori	r24, 0x08	; 8
    119e:	80 83       	st	Z, r24
	SET_BIT(TCCR1B,WGM13);//
    11a0:	80 81       	ld	r24, Z
    11a2:	80 61       	ori	r24, 0x10	; 16
    11a4:	80 83       	st	Z, r24
	
	CLR_BIT(TCCR1A,COM1A0);// NON INVERTING MODE COPMARE WITH OCR1A
    11a6:	8c 91       	ld	r24, X
    11a8:	8f 7b       	andi	r24, 0xBF	; 191
    11aa:	8c 93       	st	X, r24
	SET_BIT(TCCR1A,COM1A1);
    11ac:	8c 91       	ld	r24, X
    11ae:	80 68       	ori	r24, 0x80	; 128
    11b0:	8c 93       	st	X, r24
	
//	sei();					//enable global interrupt
	//SET_BIT(TIMSK0,TOIE0);	//enable Timer 0 Overflow interrupt
	
	ICR1 = 4999;			//pre_load value to achieve 50hz (20mS) PWM signal at OC1A pin
    11b2:	87 e8       	ldi	r24, 0x87	; 135
    11b4:	93 e1       	ldi	r25, 0x13	; 19
    11b6:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
    11ba:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	//TCNT1 = 60535;
	TCNT1 = 0;
    11be:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
    11c2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    11c6:	08 95       	ret

Disassembly of section .text.set_servo_angel:

00001298 <set_servo_angel>:
	//set_servo_angel(0);     // servo starts at angel ZERO CENTER
}


void set_servo_angel(s8 angle)  //change the OCR0A value to control PWM Signal DutyCycle to control Servo Rotation angel
{
    1298:	cf 93       	push	r28
    129a:	c8 2f       	mov	r28, r24
	
	config_servo_timer();
    129c:	0e 94 b8 08 	call	0x1170	; 0x1170 <config_servo_timer>
	switch(angle)
    12a0:	cc 23       	and	r28, r28
    12a2:	59 f0       	breq	.+22     	; 0x12ba <set_servo_angel+0x22>
    12a4:	ca 35       	cpi	r28, 0x5A	; 90
    12a6:	81 f0       	breq	.+32     	; 0x12c8 <set_servo_angel+0x30>
    12a8:	c6 3a       	cpi	r28, 0xA6	; 166
    12aa:	a1 f4       	brne	.+40     	; 0x12d4 <set_servo_angel+0x3c>
	{
	case -90:
	OCR1A=149;
    12ac:	85 e9       	ldi	r24, 0x95	; 149
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    12b4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	break; //to obtain a Positive pulse = 3% duty cycle
    12b8:	0d c0       	rjmp	.+26     	; 0x12d4 <set_servo_angel+0x3c>
	case 0:
	OCR1A=349;
    12ba:	8d e5       	ldi	r24, 0x5D	; 93
    12bc:	91 e0       	ldi	r25, 0x01	; 1
    12be:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    12c2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	break; //to obtain a Positive pulse = 7% duty cycle
    12c6:	06 c0       	rjmp	.+12     	; 0x12d4 <set_servo_angel+0x3c>
	case 90:
	OCR1A=599;
    12c8:	87 e5       	ldi	r24, 0x57	; 87
    12ca:	92 e0       	ldi	r25, 0x02	; 2
    12cc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    12d0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	}
//	ICR1=0; // to hand the timer to Ultrasonic



}
    12d4:	cf 91       	pop	r28
    12d6:	08 95       	ret

Disassembly of section .text.__vector_13:

00001406 <__vector_13>:

ISR(TIMER1_OVF_vect)   //Timer0 Overflow Interrupt service routine
{
    1406:	1f 92       	push	r1
    1408:	0f 92       	push	r0
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	0f 92       	push	r0
    140e:	11 24       	eor	r1, r1
    1410:	8f 93       	push	r24
    1412:	9f 93       	push	r25
	TCNT1=60535;		//pre-load value to TCNT0 register
    1414:	87 e7       	ldi	r24, 0x77	; 119
    1416:	9c ee       	ldi	r25, 0xEC	; 236
    1418:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
    141c:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	sei();			// reEnable global interrupt
    1420:	78 94       	sei
    1422:	9f 91       	pop	r25
    1424:	8f 91       	pop	r24
    1426:	0f 90       	pop	r0
    1428:	0f be       	out	0x3f, r0	; 63
    142a:	0f 90       	pop	r0
    142c:	1f 90       	pop	r1
    142e:	18 95       	reti

Disassembly of section .text.DIO_SetPinDirection:

00000c52 <DIO_SetPinDirection>:
			  
  	  	  	    U8VA:Value_Copy--> it take on of two values (INPUT,OUTPUT)*/
/*******************************************************************************************************/			  
extern void DIO_SetPinDirection(u8 U8PortID_Copy, u8 U8PinID_Copy, u8 U8Value_Copy){

	if(((U8PortID_Copy<4) && (U8PortID_Copy>0)) && (U8PinID_Copy<=7)){
 c52:	9f ef       	ldi	r25, 0xFF	; 255
 c54:	98 0f       	add	r25, r24
 c56:	93 30       	cpi	r25, 0x03	; 3
 c58:	08 f0       	brcs	.+2      	; 0xc5c <DIO_SetPinDirection+0xa>
 c5a:	58 c0       	rjmp	.+176    	; 0xd0c <DIO_SetPinDirection+0xba>
 c5c:	68 30       	cpi	r22, 0x08	; 8
 c5e:	08 f0       	brcs	.+2      	; 0xc62 <DIO_SetPinDirection+0x10>
 c60:	55 c0       	rjmp	.+170    	; 0xd0c <DIO_SetPinDirection+0xba>
			if(U8Value_Copy == INPUT)
 c62:	41 11       	cpse	r20, r1
 c64:	2b c0       	rjmp	.+86     	; 0xcbc <DIO_SetPinDirection+0x6a>
			{
				switch(U8PortID_Copy)
 c66:	82 30       	cpi	r24, 0x02	; 2
 c68:	89 f0       	breq	.+34     	; 0xc8c <DIO_SetPinDirection+0x3a>
 c6a:	83 30       	cpi	r24, 0x03	; 3
 c6c:	d9 f0       	breq	.+54     	; 0xca4 <DIO_SetPinDirection+0x52>
 c6e:	81 30       	cpi	r24, 0x01	; 1
 c70:	09 f0       	breq	.+2      	; 0xc74 <DIO_SetPinDirection+0x22>
 c72:	4c c0       	rjmp	.+152    	; 0xd0c <DIO_SetPinDirection+0xba>
					{ 
						case PORT1 : CLR_BIT(DDRB, U8PinID_Copy);break;
 c74:	24 b1       	in	r18, 0x04	; 4
 c76:	81 e0       	ldi	r24, 0x01	; 1
 c78:	90 e0       	ldi	r25, 0x00	; 0
 c7a:	02 c0       	rjmp	.+4      	; 0xc80 <DIO_SetPinDirection+0x2e>
 c7c:	88 0f       	add	r24, r24
 c7e:	99 1f       	adc	r25, r25
 c80:	6a 95       	dec	r22
 c82:	e2 f7       	brpl	.-8      	; 0xc7c <DIO_SetPinDirection+0x2a>
 c84:	80 95       	com	r24
 c86:	82 23       	and	r24, r18
 c88:	84 b9       	out	0x04, r24	; 4
 c8a:	08 95       	ret
						case PORT2 : CLR_BIT(DDRC, U8PinID_Copy);break;
 c8c:	27 b1       	in	r18, 0x07	; 7
 c8e:	81 e0       	ldi	r24, 0x01	; 1
 c90:	90 e0       	ldi	r25, 0x00	; 0
 c92:	02 c0       	rjmp	.+4      	; 0xc98 <DIO_SetPinDirection+0x46>
 c94:	88 0f       	add	r24, r24
 c96:	99 1f       	adc	r25, r25
 c98:	6a 95       	dec	r22
 c9a:	e2 f7       	brpl	.-8      	; 0xc94 <DIO_SetPinDirection+0x42>
 c9c:	80 95       	com	r24
 c9e:	82 23       	and	r24, r18
 ca0:	87 b9       	out	0x07, r24	; 7
 ca2:	08 95       	ret
						case PORT3 : CLR_BIT(DDRD, U8PinID_Copy);break;
 ca4:	2a b1       	in	r18, 0x0a	; 10
 ca6:	81 e0       	ldi	r24, 0x01	; 1
 ca8:	90 e0       	ldi	r25, 0x00	; 0
 caa:	02 c0       	rjmp	.+4      	; 0xcb0 <DIO_SetPinDirection+0x5e>
 cac:	88 0f       	add	r24, r24
 cae:	99 1f       	adc	r25, r25
 cb0:	6a 95       	dec	r22
 cb2:	e2 f7       	brpl	.-8      	; 0xcac <DIO_SetPinDirection+0x5a>
 cb4:	80 95       	com	r24
 cb6:	82 23       	and	r24, r18
 cb8:	8a b9       	out	0x0a, r24	; 10
 cba:	08 95       	ret
					}
			}
			else if (U8Value_Copy == OUTPUT)
 cbc:	41 30       	cpi	r20, 0x01	; 1
 cbe:	31 f5       	brne	.+76     	; 0xd0c <DIO_SetPinDirection+0xba>
			{
				switch(U8PortID_Copy)
 cc0:	82 30       	cpi	r24, 0x02	; 2
 cc2:	79 f0       	breq	.+30     	; 0xce2 <DIO_SetPinDirection+0x90>
 cc4:	83 30       	cpi	r24, 0x03	; 3
 cc6:	c1 f0       	breq	.+48     	; 0xcf8 <DIO_SetPinDirection+0xa6>
 cc8:	81 30       	cpi	r24, 0x01	; 1
 cca:	01 f5       	brne	.+64     	; 0xd0c <DIO_SetPinDirection+0xba>
					{
					 
						case PORT1 : SET_BIT(DDRB, U8PinID_Copy);break;
 ccc:	24 b1       	in	r18, 0x04	; 4
 cce:	81 e0       	ldi	r24, 0x01	; 1
 cd0:	90 e0       	ldi	r25, 0x00	; 0
 cd2:	02 c0       	rjmp	.+4      	; 0xcd8 <DIO_SetPinDirection+0x86>
 cd4:	88 0f       	add	r24, r24
 cd6:	99 1f       	adc	r25, r25
 cd8:	6a 95       	dec	r22
 cda:	e2 f7       	brpl	.-8      	; 0xcd4 <DIO_SetPinDirection+0x82>
 cdc:	82 2b       	or	r24, r18
 cde:	84 b9       	out	0x04, r24	; 4
 ce0:	08 95       	ret
						case PORT2 : SET_BIT(DDRC, U8PinID_Copy);break;
 ce2:	27 b1       	in	r18, 0x07	; 7
 ce4:	81 e0       	ldi	r24, 0x01	; 1
 ce6:	90 e0       	ldi	r25, 0x00	; 0
 ce8:	02 c0       	rjmp	.+4      	; 0xcee <DIO_SetPinDirection+0x9c>
 cea:	88 0f       	add	r24, r24
 cec:	99 1f       	adc	r25, r25
 cee:	6a 95       	dec	r22
 cf0:	e2 f7       	brpl	.-8      	; 0xcea <DIO_SetPinDirection+0x98>
 cf2:	82 2b       	or	r24, r18
 cf4:	87 b9       	out	0x07, r24	; 7
 cf6:	08 95       	ret
						case PORT3 : SET_BIT(DDRD, U8PinID_Copy);break;
 cf8:	2a b1       	in	r18, 0x0a	; 10
 cfa:	81 e0       	ldi	r24, 0x01	; 1
 cfc:	90 e0       	ldi	r25, 0x00	; 0
 cfe:	02 c0       	rjmp	.+4      	; 0xd04 <DIO_SetPinDirection+0xb2>
 d00:	88 0f       	add	r24, r24
 d02:	99 1f       	adc	r25, r25
 d04:	6a 95       	dec	r22
 d06:	e2 f7       	brpl	.-8      	; 0xd00 <DIO_SetPinDirection+0xae>
 d08:	82 2b       	or	r24, r18
 d0a:	8a b9       	out	0x0a, r24	; 10
 d0c:	08 95       	ret

Disassembly of section .text.DIO_SetPinValue:

00000d0e <DIO_SetPinValue>:
  	  	  	  
			   U8VA:Value_Copy--> it take on of two values (HIGH,LOW)*/
/******************************************************************************************************/
extern void DIO_SetPinValue(u8 U8PortID_Copy, u8 U8PinID_Copy, u8 U8Value_Copy)
{
	if(((U8PortID_Copy<4) && (U8PortID_Copy>0)) && (U8PinID_Copy<=7))
 d0e:	9f ef       	ldi	r25, 0xFF	; 255
 d10:	98 0f       	add	r25, r24
 d12:	93 30       	cpi	r25, 0x03	; 3
 d14:	08 f0       	brcs	.+2      	; 0xd18 <DIO_SetPinValue+0xa>
 d16:	58 c0       	rjmp	.+176    	; 0xdc8 <DIO_SetPinValue+0xba>
 d18:	68 30       	cpi	r22, 0x08	; 8
 d1a:	08 f0       	brcs	.+2      	; 0xd1e <DIO_SetPinValue+0x10>
 d1c:	55 c0       	rjmp	.+170    	; 0xdc8 <DIO_SetPinValue+0xba>
	{
		if(U8Value_Copy == HIGH)
 d1e:	41 30       	cpi	r20, 0x01	; 1
 d20:	41 f5       	brne	.+80     	; 0xd72 <DIO_SetPinValue+0x64>
		{
			switch(U8PortID_Copy)
 d22:	82 30       	cpi	r24, 0x02	; 2
 d24:	81 f0       	breq	.+32     	; 0xd46 <DIO_SetPinValue+0x38>
 d26:	83 30       	cpi	r24, 0x03	; 3
 d28:	c9 f0       	breq	.+50     	; 0xd5c <DIO_SetPinValue+0x4e>
 d2a:	81 30       	cpi	r24, 0x01	; 1
 d2c:	09 f0       	breq	.+2      	; 0xd30 <DIO_SetPinValue+0x22>
 d2e:	4c c0       	rjmp	.+152    	; 0xdc8 <DIO_SetPinValue+0xba>
			{
				 
				case PORT1 :SET_BIT(PORTB, U8PinID_Copy);break;
 d30:	25 b1       	in	r18, 0x05	; 5
 d32:	81 e0       	ldi	r24, 0x01	; 1
 d34:	90 e0       	ldi	r25, 0x00	; 0
 d36:	02 c0       	rjmp	.+4      	; 0xd3c <DIO_SetPinValue+0x2e>
 d38:	88 0f       	add	r24, r24
 d3a:	99 1f       	adc	r25, r25
 d3c:	6a 95       	dec	r22
 d3e:	e2 f7       	brpl	.-8      	; 0xd38 <DIO_SetPinValue+0x2a>
 d40:	82 2b       	or	r24, r18
 d42:	85 b9       	out	0x05, r24	; 5
 d44:	08 95       	ret
				case PORT2 :SET_BIT(PORTC, U8PinID_Copy);break;
 d46:	28 b1       	in	r18, 0x08	; 8
 d48:	81 e0       	ldi	r24, 0x01	; 1
 d4a:	90 e0       	ldi	r25, 0x00	; 0
 d4c:	02 c0       	rjmp	.+4      	; 0xd52 <DIO_SetPinValue+0x44>
 d4e:	88 0f       	add	r24, r24
 d50:	99 1f       	adc	r25, r25
 d52:	6a 95       	dec	r22
 d54:	e2 f7       	brpl	.-8      	; 0xd4e <DIO_SetPinValue+0x40>
 d56:	82 2b       	or	r24, r18
 d58:	88 b9       	out	0x08, r24	; 8
 d5a:	08 95       	ret
				case PORT3 :SET_BIT(PORTD, U8PinID_Copy);break;
 d5c:	2b b1       	in	r18, 0x0b	; 11
 d5e:	81 e0       	ldi	r24, 0x01	; 1
 d60:	90 e0       	ldi	r25, 0x00	; 0
 d62:	02 c0       	rjmp	.+4      	; 0xd68 <DIO_SetPinValue+0x5a>
 d64:	88 0f       	add	r24, r24
 d66:	99 1f       	adc	r25, r25
 d68:	6a 95       	dec	r22
 d6a:	e2 f7       	brpl	.-8      	; 0xd64 <DIO_SetPinValue+0x56>
 d6c:	82 2b       	or	r24, r18
 d6e:	8b b9       	out	0x0b, r24	; 11
 d70:	08 95       	ret
			}
		}
		else if(U8Value_Copy == LOW)
 d72:	41 11       	cpse	r20, r1
 d74:	29 c0       	rjmp	.+82     	; 0xdc8 <DIO_SetPinValue+0xba>
		{
			switch(U8PortID_Copy)
 d76:	82 30       	cpi	r24, 0x02	; 2
 d78:	81 f0       	breq	.+32     	; 0xd9a <DIO_SetPinValue+0x8c>
 d7a:	83 30       	cpi	r24, 0x03	; 3
 d7c:	d1 f0       	breq	.+52     	; 0xdb2 <DIO_SetPinValue+0xa4>
 d7e:	81 30       	cpi	r24, 0x01	; 1
 d80:	19 f5       	brne	.+70     	; 0xdc8 <DIO_SetPinValue+0xba>
			{
				 
				case PORT1 :CLR_BIT(PORTB, U8PinID_Copy);break;
 d82:	25 b1       	in	r18, 0x05	; 5
 d84:	81 e0       	ldi	r24, 0x01	; 1
 d86:	90 e0       	ldi	r25, 0x00	; 0
 d88:	02 c0       	rjmp	.+4      	; 0xd8e <DIO_SetPinValue+0x80>
 d8a:	88 0f       	add	r24, r24
 d8c:	99 1f       	adc	r25, r25
 d8e:	6a 95       	dec	r22
 d90:	e2 f7       	brpl	.-8      	; 0xd8a <DIO_SetPinValue+0x7c>
 d92:	80 95       	com	r24
 d94:	82 23       	and	r24, r18
 d96:	85 b9       	out	0x05, r24	; 5
 d98:	08 95       	ret
				case PORT2 :CLR_BIT(PORTC, U8PinID_Copy);break;
 d9a:	28 b1       	in	r18, 0x08	; 8
 d9c:	81 e0       	ldi	r24, 0x01	; 1
 d9e:	90 e0       	ldi	r25, 0x00	; 0
 da0:	02 c0       	rjmp	.+4      	; 0xda6 <DIO_SetPinValue+0x98>
 da2:	88 0f       	add	r24, r24
 da4:	99 1f       	adc	r25, r25
 da6:	6a 95       	dec	r22
 da8:	e2 f7       	brpl	.-8      	; 0xda2 <DIO_SetPinValue+0x94>
 daa:	80 95       	com	r24
 dac:	82 23       	and	r24, r18
 dae:	88 b9       	out	0x08, r24	; 8
 db0:	08 95       	ret
				case PORT3 :CLR_BIT(PORTD, U8PinID_Copy);break;
 db2:	2b b1       	in	r18, 0x0b	; 11
 db4:	81 e0       	ldi	r24, 0x01	; 1
 db6:	90 e0       	ldi	r25, 0x00	; 0
 db8:	02 c0       	rjmp	.+4      	; 0xdbe <DIO_SetPinValue+0xb0>
 dba:	88 0f       	add	r24, r24
 dbc:	99 1f       	adc	r25, r25
 dbe:	6a 95       	dec	r22
 dc0:	e2 f7       	brpl	.-8      	; 0xdba <DIO_SetPinValue+0xac>
 dc2:	80 95       	com	r24
 dc4:	82 23       	and	r24, r18
 dc6:	8b b9       	out	0x0b, r24	; 11
 dc8:	08 95       	ret

Disassembly of section .text.ultarasonic_distance:

00000fa2 <ultarasonic_distance>:
#include <util/delay.h>

u16 ultarasonic_distance()
{
	u16 a,b,high,distance;
	TCCR1A = 0;
     fa2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	// No modification is needed in the register TCCR1A
	
	TIFR1 = (1<<ICF1);  // Clear ICF (Input Capture flag)
     fa6:	80 e2       	ldi	r24, 0x20	; 32
     fa8:	86 bb       	out	0x16, r24	; 22
	
	DIO_SetPinValue(PORT3,PIN7,1);//here we are configuring the rising edge of the trigger
     faa:	41 e0       	ldi	r20, 0x01	; 1
     fac:	67 e0       	ldi	r22, 0x07	; 7
     fae:	83 e0       	ldi	r24, 0x03	; 3
     fb0:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     fb4:	8f ec       	ldi	r24, 0xCF	; 207
     fb6:	97 e0       	ldi	r25, 0x07	; 7
     fb8:	01 97       	sbiw	r24, 0x01	; 1
     fba:	f1 f7       	brne	.-4      	; 0xfb8 <ultarasonic_distance+0x16>
     fbc:	00 c0       	rjmp	.+0      	; 0xfbe <ultarasonic_distance+0x1c>
     fbe:	00 00       	nop
	_delay_us(500);
	DIO_SetPinValue(PORT3,PIN7,0); // waiting about 50 micro second as pulse duration
     fc0:	40 e0       	ldi	r20, 0x00	; 0
     fc2:	67 e0       	ldi	r22, 0x07	; 7
     fc4:	83 e0       	ldi	r24, 0x03	; 3
     fc6:	0e 94 87 06 	call	0xd0e	; 0xd0e <DIO_SetPinValue>
	//1100 0010
	//bit1 prescaling is required FCPU / 8
	//bit7 is set to set ICES1 to 1 to adjust at the rising edge
	//bit6 to adjust noise cancellation
	
	TCCR1B = 0xc2;  	/* Rising edge, prescaling F_CPU/8 , noise canceler*/
     fca:	82 ec       	ldi	r24, 0xC2	; 194
     fcc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	//waiting till the Input Capture Flag set to one
	//at that case thats mean the the rising edge value occured
	
	while ((TIFR1&(1<<ICF1)) == 0);
     fd0:	b5 9b       	sbis	0x16, 5	; 22
     fd2:	fe cf       	rjmp	.-4      	; 0xfd0 <ultarasonic_distance+0x2e>
	a = ICR1;  		/* Take value of capture register */
     fd4:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     fd8:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
	TIFR1 = (1<<ICF1);  	/* Clear ICF flag */
     fdc:	20 e2       	ldi	r18, 0x20	; 32
     fde:	26 bb       	out	0x16, r18	; 22
	//1000 0010
	//bit0 no prescaling is required
	//bit6 is cleared so ICES1 will be adjusted at the falling edge
	//bit7 to adjust noise cancellation
	
	TCCR1B = 0x82;  	/* Falling edge, prescaler F_CPU/8 ,noise canceler*/
     fe0:	22 e8       	ldi	r18, 0x82	; 130
     fe2:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	while ((TIFR1&(1<<ICF1)) == 0);
     fe6:	b5 9b       	sbis	0x16, 5	; 22
     fe8:	fe cf       	rjmp	.-4      	; 0xfe6 <ultarasonic_distance+0x44>
	b = ICR1;  		/* Take value of capture register */
     fea:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     fee:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
	TIFR1 = (1<<ICF1);  	/* Clear ICF flag */
     ff2:	40 e2       	ldi	r20, 0x20	; 32
     ff4:	46 bb       	out	0x16, r20	; 22
	
	//waiting till the Input Capture Flag reset to zero
	//at that case thats mean the the falling edge value captured in the
	//input capture register
	TCNT1=0;
     ff6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     ffa:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	TCCR1B = 0;  		/* Stop the timer */
     ffe:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	high=b-a;
    1002:	28 1b       	sub	r18, r24
    1004:	39 0b       	sbc	r19, r25
	distance=((high*34600)/((F_CPU/8)*2 )) ;
    1006:	a8 e2       	ldi	r26, 0x28	; 40
    1008:	b7 e8       	ldi	r27, 0x87	; 135
    100a:	0e 94 89 0a 	call	0x1512	; 0x1512 <__umulhisi3>
    100e:	20 e0       	ldi	r18, 0x00	; 0
    1010:	39 e0       	ldi	r19, 0x09	; 9
    1012:	4d e3       	ldi	r20, 0x3D	; 61
    1014:	50 e0       	ldi	r21, 0x00	; 0
    1016:	0e 94 2a 09 	call	0x1254	; 0x1254 <__udivmodsi4>
	
	return distance;
    101a:	c9 01       	movw	r24, r18
    101c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000015a0 <__subsf3>:
    15a0:	50 58       	subi	r21, 0x80	; 128

000015a2 <__addsf3>:
    15a2:	bb 27       	eor	r27, r27
    15a4:	aa 27       	eor	r26, r26
    15a6:	0e 94 c2 05 	call	0xb84	; 0xb84 <__addsf3x>
    15aa:	0c 94 78 0a 	jmp	0x14f0	; 0x14f0 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000b84 <__addsf3x>:
 b84:	11 c0       	rjmp	.+34     	; 0xba8 <__addsf3x+0x24>
 b86:	0e 94 d7 0a 	call	0x15ae	; 0x15ae <__fp_pscA>
 b8a:	38 f0       	brcs	.+14     	; 0xb9a <__addsf3x+0x16>
 b8c:	0e 94 de 0a 	call	0x15bc	; 0x15bc <__fp_pscB>
 b90:	20 f0       	brcs	.+8      	; 0xb9a <__addsf3x+0x16>
 b92:	39 f4       	brne	.+14     	; 0xba2 <__addsf3x+0x1e>
 b94:	9f 3f       	cpi	r25, 0xFF	; 255
 b96:	19 f4       	brne	.+6      	; 0xb9e <__addsf3x+0x1a>
 b98:	26 f4       	brtc	.+8      	; 0xba2 <__addsf3x+0x1e>
 b9a:	0c 94 10 0b 	jmp	0x1620	; 0x1620 <__fp_nan>
 b9e:	0e f4       	brtc	.+2      	; 0xba2 <__addsf3x+0x1e>
 ba0:	e0 95       	com	r30
 ba2:	e7 fb       	bst	r30, 7
 ba4:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
 ba8:	e9 2f       	mov	r30, r25
 baa:	0e 94 08 09 	call	0x1210	; 0x1210 <__fp_split3>
 bae:	58 f3       	brcs	.-42     	; 0xb86 <__addsf3x+0x2>
 bb0:	ba 17       	cp	r27, r26
 bb2:	62 07       	cpc	r22, r18
 bb4:	73 07       	cpc	r23, r19
 bb6:	84 07       	cpc	r24, r20
 bb8:	95 07       	cpc	r25, r21
 bba:	20 f0       	brcs	.+8      	; 0xbc4 <__addsf3x+0x40>
 bbc:	79 f4       	brne	.+30     	; 0xbdc <__addsf3x+0x58>
 bbe:	a6 f5       	brtc	.+104    	; 0xc28 <__addsf3x+0xa4>
 bc0:	0c 94 e5 0a 	jmp	0x15ca	; 0x15ca <__fp_zero>
 bc4:	0e f4       	brtc	.+2      	; 0xbc8 <__addsf3x+0x44>
 bc6:	e0 95       	com	r30
 bc8:	0b 2e       	mov	r0, r27
 bca:	ba 2f       	mov	r27, r26
 bcc:	a0 2d       	mov	r26, r0
 bce:	0b 01       	movw	r0, r22
 bd0:	b9 01       	movw	r22, r18
 bd2:	90 01       	movw	r18, r0
 bd4:	0c 01       	movw	r0, r24
 bd6:	ca 01       	movw	r24, r20
 bd8:	a0 01       	movw	r20, r0
 bda:	11 24       	eor	r1, r1
 bdc:	ff 27       	eor	r31, r31
 bde:	59 1b       	sub	r21, r25
 be0:	99 f0       	breq	.+38     	; 0xc08 <__addsf3x+0x84>
 be2:	59 3f       	cpi	r21, 0xF9	; 249
 be4:	50 f4       	brcc	.+20     	; 0xbfa <__addsf3x+0x76>
 be6:	50 3e       	cpi	r21, 0xE0	; 224
 be8:	68 f1       	brcs	.+90     	; 0xc44 <__addsf3x+0xc0>
 bea:	1a 16       	cp	r1, r26
 bec:	f0 40       	sbci	r31, 0x00	; 0
 bee:	a2 2f       	mov	r26, r18
 bf0:	23 2f       	mov	r18, r19
 bf2:	34 2f       	mov	r19, r20
 bf4:	44 27       	eor	r20, r20
 bf6:	58 5f       	subi	r21, 0xF8	; 248
 bf8:	f3 cf       	rjmp	.-26     	; 0xbe0 <__addsf3x+0x5c>
 bfa:	46 95       	lsr	r20
 bfc:	37 95       	ror	r19
 bfe:	27 95       	ror	r18
 c00:	a7 95       	ror	r26
 c02:	f0 40       	sbci	r31, 0x00	; 0
 c04:	53 95       	inc	r21
 c06:	c9 f7       	brne	.-14     	; 0xbfa <__addsf3x+0x76>
 c08:	7e f4       	brtc	.+30     	; 0xc28 <__addsf3x+0xa4>
 c0a:	1f 16       	cp	r1, r31
 c0c:	ba 0b       	sbc	r27, r26
 c0e:	62 0b       	sbc	r22, r18
 c10:	73 0b       	sbc	r23, r19
 c12:	84 0b       	sbc	r24, r20
 c14:	ba f0       	brmi	.+46     	; 0xc44 <__addsf3x+0xc0>
 c16:	91 50       	subi	r25, 0x01	; 1
 c18:	a1 f0       	breq	.+40     	; 0xc42 <__addsf3x+0xbe>
 c1a:	ff 0f       	add	r31, r31
 c1c:	bb 1f       	adc	r27, r27
 c1e:	66 1f       	adc	r22, r22
 c20:	77 1f       	adc	r23, r23
 c22:	88 1f       	adc	r24, r24
 c24:	c2 f7       	brpl	.-16     	; 0xc16 <__addsf3x+0x92>
 c26:	0e c0       	rjmp	.+28     	; 0xc44 <__addsf3x+0xc0>
 c28:	ba 0f       	add	r27, r26
 c2a:	62 1f       	adc	r22, r18
 c2c:	73 1f       	adc	r23, r19
 c2e:	84 1f       	adc	r24, r20
 c30:	48 f4       	brcc	.+18     	; 0xc44 <__addsf3x+0xc0>
 c32:	87 95       	ror	r24
 c34:	77 95       	ror	r23
 c36:	67 95       	ror	r22
 c38:	b7 95       	ror	r27
 c3a:	f7 95       	ror	r31
 c3c:	9e 3f       	cpi	r25, 0xFE	; 254
 c3e:	08 f0       	brcs	.+2      	; 0xc42 <__addsf3x+0xbe>
 c40:	b0 cf       	rjmp	.-160    	; 0xba2 <__addsf3x+0x1e>
 c42:	93 95       	inc	r25
 c44:	88 0f       	add	r24, r24
 c46:	08 f0       	brcs	.+2      	; 0xc4a <__addsf3x+0xc6>
 c48:	99 27       	eor	r25, r25
 c4a:	ee 0f       	add	r30, r30
 c4c:	97 95       	ror	r25
 c4e:	87 95       	ror	r24
 c50:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000015f2 <__cmpsf2>:
    15f2:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <__fp_cmp>
    15f6:	08 f4       	brcc	.+2      	; 0x15fa <__cmpsf2+0x8>
    15f8:	81 e0       	ldi	r24, 0x01	; 1
    15fa:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001610 <__divsf3>:
    1610:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__divsf3x>
    1614:	0c 94 78 0a 	jmp	0x14f0	; 0x14f0 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

000009d2 <__divsf3x>:
 9d2:	10 c0       	rjmp	.+32     	; 0x9f4 <__divsf3x+0x22>
 9d4:	0e 94 de 0a 	call	0x15bc	; 0x15bc <__fp_pscB>
 9d8:	58 f0       	brcs	.+22     	; 0x9f0 <__divsf3x+0x1e>
 9da:	0e 94 d7 0a 	call	0x15ae	; 0x15ae <__fp_pscA>
 9de:	40 f0       	brcs	.+16     	; 0x9f0 <__divsf3x+0x1e>
 9e0:	29 f4       	brne	.+10     	; 0x9ec <__divsf3x+0x1a>
 9e2:	5f 3f       	cpi	r21, 0xFF	; 255
 9e4:	29 f0       	breq	.+10     	; 0x9f0 <__divsf3x+0x1e>
 9e6:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
 9ea:	51 11       	cpse	r21, r1
 9ec:	0c 94 e6 0a 	jmp	0x15cc	; 0x15cc <__fp_szero>
 9f0:	0c 94 10 0b 	jmp	0x1620	; 0x1620 <__fp_nan>
 9f4:	0e 94 08 09 	call	0x1210	; 0x1210 <__fp_split3>
 9f8:	68 f3       	brcs	.-38     	; 0x9d4 <__divsf3x+0x2>

000009fa <__divsf3_pse>:
 9fa:	99 23       	and	r25, r25
 9fc:	b1 f3       	breq	.-20     	; 0x9ea <__divsf3x+0x18>
 9fe:	55 23       	and	r21, r21
 a00:	91 f3       	breq	.-28     	; 0x9e6 <__divsf3x+0x14>
 a02:	95 1b       	sub	r25, r21
 a04:	55 0b       	sbc	r21, r21
 a06:	bb 27       	eor	r27, r27
 a08:	aa 27       	eor	r26, r26
 a0a:	62 17       	cp	r22, r18
 a0c:	73 07       	cpc	r23, r19
 a0e:	84 07       	cpc	r24, r20
 a10:	38 f0       	brcs	.+14     	; 0xa20 <__divsf3_pse+0x26>
 a12:	9f 5f       	subi	r25, 0xFF	; 255
 a14:	5f 4f       	sbci	r21, 0xFF	; 255
 a16:	22 0f       	add	r18, r18
 a18:	33 1f       	adc	r19, r19
 a1a:	44 1f       	adc	r20, r20
 a1c:	aa 1f       	adc	r26, r26
 a1e:	a9 f3       	breq	.-22     	; 0xa0a <__divsf3_pse+0x10>
 a20:	35 d0       	rcall	.+106    	; 0xa8c <__divsf3_pse+0x92>
 a22:	0e 2e       	mov	r0, r30
 a24:	3a f0       	brmi	.+14     	; 0xa34 <__divsf3_pse+0x3a>
 a26:	e0 e8       	ldi	r30, 0x80	; 128
 a28:	32 d0       	rcall	.+100    	; 0xa8e <__divsf3_pse+0x94>
 a2a:	91 50       	subi	r25, 0x01	; 1
 a2c:	50 40       	sbci	r21, 0x00	; 0
 a2e:	e6 95       	lsr	r30
 a30:	00 1c       	adc	r0, r0
 a32:	ca f7       	brpl	.-14     	; 0xa26 <__divsf3_pse+0x2c>
 a34:	2b d0       	rcall	.+86     	; 0xa8c <__divsf3_pse+0x92>
 a36:	fe 2f       	mov	r31, r30
 a38:	29 d0       	rcall	.+82     	; 0xa8c <__divsf3_pse+0x92>
 a3a:	66 0f       	add	r22, r22
 a3c:	77 1f       	adc	r23, r23
 a3e:	88 1f       	adc	r24, r24
 a40:	bb 1f       	adc	r27, r27
 a42:	26 17       	cp	r18, r22
 a44:	37 07       	cpc	r19, r23
 a46:	48 07       	cpc	r20, r24
 a48:	ab 07       	cpc	r26, r27
 a4a:	b0 e8       	ldi	r27, 0x80	; 128
 a4c:	09 f0       	breq	.+2      	; 0xa50 <__divsf3_pse+0x56>
 a4e:	bb 0b       	sbc	r27, r27
 a50:	80 2d       	mov	r24, r0
 a52:	bf 01       	movw	r22, r30
 a54:	ff 27       	eor	r31, r31
 a56:	93 58       	subi	r25, 0x83	; 131
 a58:	5f 4f       	sbci	r21, 0xFF	; 255
 a5a:	3a f0       	brmi	.+14     	; 0xa6a <__divsf3_pse+0x70>
 a5c:	9e 3f       	cpi	r25, 0xFE	; 254
 a5e:	51 05       	cpc	r21, r1
 a60:	78 f0       	brcs	.+30     	; 0xa80 <__divsf3_pse+0x86>
 a62:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
 a66:	0c 94 e6 0a 	jmp	0x15cc	; 0x15cc <__fp_szero>
 a6a:	5f 3f       	cpi	r21, 0xFF	; 255
 a6c:	e4 f3       	brlt	.-8      	; 0xa66 <__divsf3_pse+0x6c>
 a6e:	98 3e       	cpi	r25, 0xE8	; 232
 a70:	d4 f3       	brlt	.-12     	; 0xa66 <__divsf3_pse+0x6c>
 a72:	86 95       	lsr	r24
 a74:	77 95       	ror	r23
 a76:	67 95       	ror	r22
 a78:	b7 95       	ror	r27
 a7a:	f7 95       	ror	r31
 a7c:	9f 5f       	subi	r25, 0xFF	; 255
 a7e:	c9 f7       	brne	.-14     	; 0xa72 <__divsf3_pse+0x78>
 a80:	88 0f       	add	r24, r24
 a82:	91 1d       	adc	r25, r1
 a84:	96 95       	lsr	r25
 a86:	87 95       	ror	r24
 a88:	97 f9       	bld	r25, 7
 a8a:	08 95       	ret
 a8c:	e1 e0       	ldi	r30, 0x01	; 1
 a8e:	66 0f       	add	r22, r22
 a90:	77 1f       	adc	r23, r23
 a92:	88 1f       	adc	r24, r24
 a94:	bb 1f       	adc	r27, r27
 a96:	62 17       	cp	r22, r18
 a98:	73 07       	cpc	r23, r19
 a9a:	84 07       	cpc	r24, r20
 a9c:	ba 07       	cpc	r27, r26
 a9e:	20 f0       	brcs	.+8      	; 0xaa8 <__divsf3_pse+0xae>
 aa0:	62 1b       	sub	r22, r18
 aa2:	73 0b       	sbc	r23, r19
 aa4:	84 0b       	sbc	r24, r20
 aa6:	ba 0b       	sbc	r27, r26
 aa8:	ee 1f       	adc	r30, r30
 aaa:	88 f7       	brcc	.-30     	; 0xa8e <__divsf3_pse+0x94>
 aac:	e0 95       	com	r30
 aae:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000101e <__floatunsisf>:
    101e:	e8 94       	clt
    1020:	09 c0       	rjmp	.+18     	; 0x1034 <__floatsisf+0x12>

00001022 <__floatsisf>:
    1022:	97 fb       	bst	r25, 7
    1024:	3e f4       	brtc	.+14     	; 0x1034 <__floatsisf+0x12>
    1026:	90 95       	com	r25
    1028:	80 95       	com	r24
    102a:	70 95       	com	r23
    102c:	61 95       	neg	r22
    102e:	7f 4f       	sbci	r23, 0xFF	; 255
    1030:	8f 4f       	sbci	r24, 0xFF	; 255
    1032:	9f 4f       	sbci	r25, 0xFF	; 255
    1034:	99 23       	and	r25, r25
    1036:	a9 f0       	breq	.+42     	; 0x1062 <__floatsisf+0x40>
    1038:	f9 2f       	mov	r31, r25
    103a:	96 e9       	ldi	r25, 0x96	; 150
    103c:	bb 27       	eor	r27, r27
    103e:	93 95       	inc	r25
    1040:	f6 95       	lsr	r31
    1042:	87 95       	ror	r24
    1044:	77 95       	ror	r23
    1046:	67 95       	ror	r22
    1048:	b7 95       	ror	r27
    104a:	f1 11       	cpse	r31, r1
    104c:	f8 cf       	rjmp	.-16     	; 0x103e <__floatsisf+0x1c>
    104e:	fa f4       	brpl	.+62     	; 0x108e <__floatsisf+0x6c>
    1050:	bb 0f       	add	r27, r27
    1052:	11 f4       	brne	.+4      	; 0x1058 <__floatsisf+0x36>
    1054:	60 ff       	sbrs	r22, 0
    1056:	1b c0       	rjmp	.+54     	; 0x108e <__floatsisf+0x6c>
    1058:	6f 5f       	subi	r22, 0xFF	; 255
    105a:	7f 4f       	sbci	r23, 0xFF	; 255
    105c:	8f 4f       	sbci	r24, 0xFF	; 255
    105e:	9f 4f       	sbci	r25, 0xFF	; 255
    1060:	16 c0       	rjmp	.+44     	; 0x108e <__floatsisf+0x6c>
    1062:	88 23       	and	r24, r24
    1064:	11 f0       	breq	.+4      	; 0x106a <__floatsisf+0x48>
    1066:	96 e9       	ldi	r25, 0x96	; 150
    1068:	11 c0       	rjmp	.+34     	; 0x108c <__floatsisf+0x6a>
    106a:	77 23       	and	r23, r23
    106c:	21 f0       	breq	.+8      	; 0x1076 <__floatsisf+0x54>
    106e:	9e e8       	ldi	r25, 0x8E	; 142
    1070:	87 2f       	mov	r24, r23
    1072:	76 2f       	mov	r23, r22
    1074:	05 c0       	rjmp	.+10     	; 0x1080 <__floatsisf+0x5e>
    1076:	66 23       	and	r22, r22
    1078:	71 f0       	breq	.+28     	; 0x1096 <__floatsisf+0x74>
    107a:	96 e8       	ldi	r25, 0x86	; 134
    107c:	86 2f       	mov	r24, r22
    107e:	70 e0       	ldi	r23, 0x00	; 0
    1080:	60 e0       	ldi	r22, 0x00	; 0
    1082:	2a f0       	brmi	.+10     	; 0x108e <__floatsisf+0x6c>
    1084:	9a 95       	dec	r25
    1086:	66 0f       	add	r22, r22
    1088:	77 1f       	adc	r23, r23
    108a:	88 1f       	adc	r24, r24
    108c:	da f7       	brpl	.-10     	; 0x1084 <__floatsisf+0x62>
    108e:	88 0f       	add	r24, r24
    1090:	96 95       	lsr	r25
    1092:	87 95       	ror	r24
    1094:	97 f9       	bld	r25, 7
    1096:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000011c8 <__fp_cmp>:
    11c8:	99 0f       	add	r25, r25
    11ca:	00 08       	sbc	r0, r0
    11cc:	55 0f       	add	r21, r21
    11ce:	aa 0b       	sbc	r26, r26
    11d0:	e0 e8       	ldi	r30, 0x80	; 128
    11d2:	fe ef       	ldi	r31, 0xFE	; 254
    11d4:	16 16       	cp	r1, r22
    11d6:	17 06       	cpc	r1, r23
    11d8:	e8 07       	cpc	r30, r24
    11da:	f9 07       	cpc	r31, r25
    11dc:	c0 f0       	brcs	.+48     	; 0x120e <__fp_cmp+0x46>
    11de:	12 16       	cp	r1, r18
    11e0:	13 06       	cpc	r1, r19
    11e2:	e4 07       	cpc	r30, r20
    11e4:	f5 07       	cpc	r31, r21
    11e6:	98 f0       	brcs	.+38     	; 0x120e <__fp_cmp+0x46>
    11e8:	62 1b       	sub	r22, r18
    11ea:	73 0b       	sbc	r23, r19
    11ec:	84 0b       	sbc	r24, r20
    11ee:	95 0b       	sbc	r25, r21
    11f0:	39 f4       	brne	.+14     	; 0x1200 <__fp_cmp+0x38>
    11f2:	0a 26       	eor	r0, r26
    11f4:	61 f0       	breq	.+24     	; 0x120e <__fp_cmp+0x46>
    11f6:	23 2b       	or	r18, r19
    11f8:	24 2b       	or	r18, r20
    11fa:	25 2b       	or	r18, r21
    11fc:	21 f4       	brne	.+8      	; 0x1206 <__fp_cmp+0x3e>
    11fe:	08 95       	ret
    1200:	0a 26       	eor	r0, r26
    1202:	09 f4       	brne	.+2      	; 0x1206 <__fp_cmp+0x3e>
    1204:	a1 40       	sbci	r26, 0x01	; 1
    1206:	a6 95       	lsr	r26
    1208:	8f ef       	ldi	r24, 0xFF	; 255
    120a:	81 1d       	adc	r24, r1
    120c:	81 1d       	adc	r24, r1
    120e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000015e6 <__fp_inf>:
    15e6:	97 f9       	bld	r25, 7
    15e8:	9f 67       	ori	r25, 0x7F	; 127
    15ea:	80 e8       	ldi	r24, 0x80	; 128
    15ec:	70 e0       	ldi	r23, 0x00	; 0
    15ee:	60 e0       	ldi	r22, 0x00	; 0
    15f0:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001620 <__fp_nan>:
    1620:	9f ef       	ldi	r25, 0xFF	; 255
    1622:	80 ec       	ldi	r24, 0xC0	; 192
    1624:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000015ae <__fp_pscA>:
    15ae:	00 24       	eor	r0, r0
    15b0:	0a 94       	dec	r0
    15b2:	16 16       	cp	r1, r22
    15b4:	17 06       	cpc	r1, r23
    15b6:	18 06       	cpc	r1, r24
    15b8:	09 06       	cpc	r0, r25
    15ba:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000015bc <__fp_pscB>:
    15bc:	00 24       	eor	r0, r0
    15be:	0a 94       	dec	r0
    15c0:	12 16       	cp	r1, r18
    15c2:	13 06       	cpc	r1, r19
    15c4:	14 06       	cpc	r1, r20
    15c6:	05 06       	cpc	r0, r21
    15c8:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000014f0 <__fp_round>:
    14f0:	09 2e       	mov	r0, r25
    14f2:	03 94       	inc	r0
    14f4:	00 0c       	add	r0, r0
    14f6:	11 f4       	brne	.+4      	; 0x14fc <__fp_round+0xc>
    14f8:	88 23       	and	r24, r24
    14fa:	52 f0       	brmi	.+20     	; 0x1510 <__fp_round+0x20>
    14fc:	bb 0f       	add	r27, r27
    14fe:	40 f4       	brcc	.+16     	; 0x1510 <__fp_round+0x20>
    1500:	bf 2b       	or	r27, r31
    1502:	11 f4       	brne	.+4      	; 0x1508 <__fp_round+0x18>
    1504:	60 ff       	sbrs	r22, 0
    1506:	04 c0       	rjmp	.+8      	; 0x1510 <__fp_round+0x20>
    1508:	6f 5f       	subi	r22, 0xFF	; 255
    150a:	7f 4f       	sbci	r23, 0xFF	; 255
    150c:	8f 4f       	sbci	r24, 0xFF	; 255
    150e:	9f 4f       	sbci	r25, 0xFF	; 255
    1510:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001210 <__fp_split3>:
    1210:	57 fd       	sbrc	r21, 7
    1212:	90 58       	subi	r25, 0x80	; 128
    1214:	44 0f       	add	r20, r20
    1216:	55 1f       	adc	r21, r21
    1218:	59 f0       	breq	.+22     	; 0x1230 <__fp_splitA+0x10>
    121a:	5f 3f       	cpi	r21, 0xFF	; 255
    121c:	71 f0       	breq	.+28     	; 0x123a <__fp_splitA+0x1a>
    121e:	47 95       	ror	r20

00001220 <__fp_splitA>:
    1220:	88 0f       	add	r24, r24
    1222:	97 fb       	bst	r25, 7
    1224:	99 1f       	adc	r25, r25
    1226:	61 f0       	breq	.+24     	; 0x1240 <__fp_splitA+0x20>
    1228:	9f 3f       	cpi	r25, 0xFF	; 255
    122a:	79 f0       	breq	.+30     	; 0x124a <__fp_splitA+0x2a>
    122c:	87 95       	ror	r24
    122e:	08 95       	ret
    1230:	12 16       	cp	r1, r18
    1232:	13 06       	cpc	r1, r19
    1234:	14 06       	cpc	r1, r20
    1236:	55 1f       	adc	r21, r21
    1238:	f2 cf       	rjmp	.-28     	; 0x121e <__fp_split3+0xe>
    123a:	46 95       	lsr	r20
    123c:	f1 df       	rcall	.-30     	; 0x1220 <__fp_splitA>
    123e:	08 c0       	rjmp	.+16     	; 0x1250 <__fp_splitA+0x30>
    1240:	16 16       	cp	r1, r22
    1242:	17 06       	cpc	r1, r23
    1244:	18 06       	cpc	r1, r24
    1246:	99 1f       	adc	r25, r25
    1248:	f1 cf       	rjmp	.-30     	; 0x122c <__fp_splitA+0xc>
    124a:	86 95       	lsr	r24
    124c:	71 05       	cpc	r23, r1
    124e:	61 05       	cpc	r22, r1
    1250:	08 94       	sec
    1252:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000015ca <__fp_zero>:
    15ca:	e8 94       	clt

000015cc <__fp_szero>:
    15cc:	bb 27       	eor	r27, r27
    15ce:	66 27       	eor	r22, r22
    15d0:	77 27       	eor	r23, r23
    15d2:	cb 01       	movw	r24, r22
    15d4:	97 f9       	bld	r25, 7
    15d6:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000015fc <__gesf2>:
    15fc:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <__fp_cmp>
    1600:	08 f4       	brcc	.+2      	; 0x1604 <__gesf2+0x8>
    1602:	8f ef       	ldi	r24, 0xFF	; 255
    1604:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001618 <__mulsf3>:
    1618:	0e 94 58 05 	call	0xab0	; 0xab0 <__mulsf3x>
    161c:	0c 94 78 0a 	jmp	0x14f0	; 0x14f0 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000ab0 <__mulsf3x>:
 ab0:	0f c0       	rjmp	.+30     	; 0xad0 <__mulsf3x+0x20>
 ab2:	0e 94 d7 0a 	call	0x15ae	; 0x15ae <__fp_pscA>
 ab6:	38 f0       	brcs	.+14     	; 0xac6 <__mulsf3x+0x16>
 ab8:	0e 94 de 0a 	call	0x15bc	; 0x15bc <__fp_pscB>
 abc:	20 f0       	brcs	.+8      	; 0xac6 <__mulsf3x+0x16>
 abe:	95 23       	and	r25, r21
 ac0:	11 f0       	breq	.+4      	; 0xac6 <__mulsf3x+0x16>
 ac2:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
 ac6:	0c 94 10 0b 	jmp	0x1620	; 0x1620 <__fp_nan>
 aca:	11 24       	eor	r1, r1
 acc:	0c 94 e6 0a 	jmp	0x15cc	; 0x15cc <__fp_szero>
 ad0:	0e 94 08 09 	call	0x1210	; 0x1210 <__fp_split3>
 ad4:	70 f3       	brcs	.-36     	; 0xab2 <__mulsf3x+0x2>

00000ad6 <__mulsf3_pse>:
 ad6:	95 9f       	mul	r25, r21
 ad8:	c1 f3       	breq	.-16     	; 0xaca <__mulsf3x+0x1a>
 ada:	95 0f       	add	r25, r21
 adc:	50 e0       	ldi	r21, 0x00	; 0
 ade:	55 1f       	adc	r21, r21
 ae0:	62 9f       	mul	r22, r18
 ae2:	f0 01       	movw	r30, r0
 ae4:	72 9f       	mul	r23, r18
 ae6:	bb 27       	eor	r27, r27
 ae8:	f0 0d       	add	r31, r0
 aea:	b1 1d       	adc	r27, r1
 aec:	63 9f       	mul	r22, r19
 aee:	aa 27       	eor	r26, r26
 af0:	f0 0d       	add	r31, r0
 af2:	b1 1d       	adc	r27, r1
 af4:	aa 1f       	adc	r26, r26
 af6:	64 9f       	mul	r22, r20
 af8:	66 27       	eor	r22, r22
 afa:	b0 0d       	add	r27, r0
 afc:	a1 1d       	adc	r26, r1
 afe:	66 1f       	adc	r22, r22
 b00:	82 9f       	mul	r24, r18
 b02:	22 27       	eor	r18, r18
 b04:	b0 0d       	add	r27, r0
 b06:	a1 1d       	adc	r26, r1
 b08:	62 1f       	adc	r22, r18
 b0a:	73 9f       	mul	r23, r19
 b0c:	b0 0d       	add	r27, r0
 b0e:	a1 1d       	adc	r26, r1
 b10:	62 1f       	adc	r22, r18
 b12:	83 9f       	mul	r24, r19
 b14:	a0 0d       	add	r26, r0
 b16:	61 1d       	adc	r22, r1
 b18:	22 1f       	adc	r18, r18
 b1a:	74 9f       	mul	r23, r20
 b1c:	33 27       	eor	r19, r19
 b1e:	a0 0d       	add	r26, r0
 b20:	61 1d       	adc	r22, r1
 b22:	23 1f       	adc	r18, r19
 b24:	84 9f       	mul	r24, r20
 b26:	60 0d       	add	r22, r0
 b28:	21 1d       	adc	r18, r1
 b2a:	82 2f       	mov	r24, r18
 b2c:	76 2f       	mov	r23, r22
 b2e:	6a 2f       	mov	r22, r26
 b30:	11 24       	eor	r1, r1
 b32:	9f 57       	subi	r25, 0x7F	; 127
 b34:	50 40       	sbci	r21, 0x00	; 0
 b36:	9a f0       	brmi	.+38     	; 0xb5e <__mulsf3_pse+0x88>
 b38:	f1 f0       	breq	.+60     	; 0xb76 <__mulsf3_pse+0xa0>
 b3a:	88 23       	and	r24, r24
 b3c:	4a f0       	brmi	.+18     	; 0xb50 <__mulsf3_pse+0x7a>
 b3e:	ee 0f       	add	r30, r30
 b40:	ff 1f       	adc	r31, r31
 b42:	bb 1f       	adc	r27, r27
 b44:	66 1f       	adc	r22, r22
 b46:	77 1f       	adc	r23, r23
 b48:	88 1f       	adc	r24, r24
 b4a:	91 50       	subi	r25, 0x01	; 1
 b4c:	50 40       	sbci	r21, 0x00	; 0
 b4e:	a9 f7       	brne	.-22     	; 0xb3a <__mulsf3_pse+0x64>
 b50:	9e 3f       	cpi	r25, 0xFE	; 254
 b52:	51 05       	cpc	r21, r1
 b54:	80 f0       	brcs	.+32     	; 0xb76 <__mulsf3_pse+0xa0>
 b56:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__fp_inf>
 b5a:	0c 94 e6 0a 	jmp	0x15cc	; 0x15cc <__fp_szero>
 b5e:	5f 3f       	cpi	r21, 0xFF	; 255
 b60:	e4 f3       	brlt	.-8      	; 0xb5a <__mulsf3_pse+0x84>
 b62:	98 3e       	cpi	r25, 0xE8	; 232
 b64:	d4 f3       	brlt	.-12     	; 0xb5a <__mulsf3_pse+0x84>
 b66:	86 95       	lsr	r24
 b68:	77 95       	ror	r23
 b6a:	67 95       	ror	r22
 b6c:	b7 95       	ror	r27
 b6e:	f7 95       	ror	r31
 b70:	e7 95       	ror	r30
 b72:	9f 5f       	subi	r25, 0xFF	; 255
 b74:	c1 f7       	brne	.-16     	; 0xb66 <__mulsf3_pse+0x90>
 b76:	fe 2b       	or	r31, r30
 b78:	88 0f       	add	r24, r24
 b7a:	91 1d       	adc	r25, r1
 b7c:	96 95       	lsr	r25
 b7e:	87 95       	ror	r24
 b80:	97 f9       	bld	r25, 7
 b82:	08 95       	ret

Disassembly of section .text.libgcc.div:

00001430 <__divmodhi4>:
    1430:	97 fb       	bst	r25, 7
    1432:	07 2e       	mov	r0, r23
    1434:	16 f4       	brtc	.+4      	; 0x143a <__divmodhi4+0xa>
    1436:	00 94       	com	r0
    1438:	07 d0       	rcall	.+14     	; 0x1448 <__divmodhi4_neg1>
    143a:	77 fd       	sbrc	r23, 7
    143c:	09 d0       	rcall	.+18     	; 0x1450 <__divmodhi4_neg2>
    143e:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__udivmodhi4>
    1442:	07 fc       	sbrc	r0, 7
    1444:	05 d0       	rcall	.+10     	; 0x1450 <__divmodhi4_neg2>
    1446:	3e f4       	brtc	.+14     	; 0x1456 <__divmodhi4_exit>

00001448 <__divmodhi4_neg1>:
    1448:	90 95       	com	r25
    144a:	81 95       	neg	r24
    144c:	9f 4f       	sbci	r25, 0xFF	; 255
    144e:	08 95       	ret

00001450 <__divmodhi4_neg2>:
    1450:	70 95       	com	r23
    1452:	61 95       	neg	r22
    1454:	7f 4f       	sbci	r23, 0xFF	; 255

00001456 <__divmodhi4_exit>:
    1456:	08 95       	ret

Disassembly of section .text.libgcc.div:

00001254 <__udivmodsi4>:
    1254:	a1 e2       	ldi	r26, 0x21	; 33
    1256:	1a 2e       	mov	r1, r26
    1258:	aa 1b       	sub	r26, r26
    125a:	bb 1b       	sub	r27, r27
    125c:	fd 01       	movw	r30, r26
    125e:	0d c0       	rjmp	.+26     	; 0x127a <__udivmodsi4_ep>

00001260 <__udivmodsi4_loop>:
    1260:	aa 1f       	adc	r26, r26
    1262:	bb 1f       	adc	r27, r27
    1264:	ee 1f       	adc	r30, r30
    1266:	ff 1f       	adc	r31, r31
    1268:	a2 17       	cp	r26, r18
    126a:	b3 07       	cpc	r27, r19
    126c:	e4 07       	cpc	r30, r20
    126e:	f5 07       	cpc	r31, r21
    1270:	20 f0       	brcs	.+8      	; 0x127a <__udivmodsi4_ep>
    1272:	a2 1b       	sub	r26, r18
    1274:	b3 0b       	sbc	r27, r19
    1276:	e4 0b       	sbc	r30, r20
    1278:	f5 0b       	sbc	r31, r21

0000127a <__udivmodsi4_ep>:
    127a:	66 1f       	adc	r22, r22
    127c:	77 1f       	adc	r23, r23
    127e:	88 1f       	adc	r24, r24
    1280:	99 1f       	adc	r25, r25
    1282:	1a 94       	dec	r1
    1284:	69 f7       	brne	.-38     	; 0x1260 <__udivmodsi4_loop>
    1286:	60 95       	com	r22
    1288:	70 95       	com	r23
    128a:	80 95       	com	r24
    128c:	90 95       	com	r25
    128e:	9b 01       	movw	r18, r22
    1290:	ac 01       	movw	r20, r24
    1292:	bd 01       	movw	r22, r26
    1294:	cf 01       	movw	r24, r30
    1296:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00001512 <__umulhisi3>:
    1512:	a2 9f       	mul	r26, r18
    1514:	b0 01       	movw	r22, r0
    1516:	b3 9f       	mul	r27, r19
    1518:	c0 01       	movw	r24, r0
    151a:	a3 9f       	mul	r26, r19
    151c:	70 0d       	add	r23, r0
    151e:	81 1d       	adc	r24, r1
    1520:	11 24       	eor	r1, r1
    1522:	91 1d       	adc	r25, r1
    1524:	b2 9f       	mul	r27, r18
    1526:	70 0d       	add	r23, r0
    1528:	81 1d       	adc	r24, r1
    152a:	11 24       	eor	r1, r1
    152c:	91 1d       	adc	r25, r1
    152e:	08 95       	ret

Disassembly of section .text.libgcc.div:

00001458 <__udivmodhi4>:
    1458:	aa 1b       	sub	r26, r26
    145a:	bb 1b       	sub	r27, r27
    145c:	51 e1       	ldi	r21, 0x11	; 17
    145e:	07 c0       	rjmp	.+14     	; 0x146e <__udivmodhi4_ep>

00001460 <__udivmodhi4_loop>:
    1460:	aa 1f       	adc	r26, r26
    1462:	bb 1f       	adc	r27, r27
    1464:	a6 17       	cp	r26, r22
    1466:	b7 07       	cpc	r27, r23
    1468:	10 f0       	brcs	.+4      	; 0x146e <__udivmodhi4_ep>
    146a:	a6 1b       	sub	r26, r22
    146c:	b7 0b       	sbc	r27, r23

0000146e <__udivmodhi4_ep>:
    146e:	88 1f       	adc	r24, r24
    1470:	99 1f       	adc	r25, r25
    1472:	5a 95       	dec	r21
    1474:	a9 f7       	brne	.-22     	; 0x1460 <__udivmodhi4_loop>
    1476:	80 95       	com	r24
    1478:	90 95       	com	r25
    147a:	bc 01       	movw	r22, r24
    147c:	cd 01       	movw	r24, r26
    147e:	08 95       	ret

Disassembly of section .text.avrlibc:

00000dca <do_rand>:
 dca:	8f 92       	push	r8
 dcc:	9f 92       	push	r9
 dce:	af 92       	push	r10
 dd0:	bf 92       	push	r11
 dd2:	cf 92       	push	r12
 dd4:	df 92       	push	r13
 dd6:	ef 92       	push	r14
 dd8:	ff 92       	push	r15
 dda:	cf 93       	push	r28
 ddc:	df 93       	push	r29
 dde:	ec 01       	movw	r28, r24
 de0:	68 81       	ld	r22, Y
 de2:	79 81       	ldd	r23, Y+1	; 0x01
 de4:	8a 81       	ldd	r24, Y+2	; 0x02
 de6:	9b 81       	ldd	r25, Y+3	; 0x03
 de8:	61 15       	cp	r22, r1
 dea:	71 05       	cpc	r23, r1
 dec:	81 05       	cpc	r24, r1
 dee:	91 05       	cpc	r25, r1
 df0:	21 f4       	brne	.+8      	; 0xdfa <do_rand+0x30>
 df2:	64 e2       	ldi	r22, 0x24	; 36
 df4:	79 ed       	ldi	r23, 0xD9	; 217
 df6:	8b e5       	ldi	r24, 0x5B	; 91
 df8:	97 e0       	ldi	r25, 0x07	; 7
 dfa:	2d e1       	ldi	r18, 0x1D	; 29
 dfc:	33 ef       	ldi	r19, 0xF3	; 243
 dfe:	41 e0       	ldi	r20, 0x01	; 1
 e00:	50 e0       	ldi	r21, 0x00	; 0
 e02:	0e 94 83 09 	call	0x1306	; 0x1306 <__divmodsi4>
 e06:	49 01       	movw	r8, r18
 e08:	5a 01       	movw	r10, r20
 e0a:	9b 01       	movw	r18, r22
 e0c:	ac 01       	movw	r20, r24
 e0e:	a7 ea       	ldi	r26, 0xA7	; 167
 e10:	b1 e4       	ldi	r27, 0x41	; 65
 e12:	0e 94 a6 0a 	call	0x154c	; 0x154c <__muluhisi3>
 e16:	6b 01       	movw	r12, r22
 e18:	7c 01       	movw	r14, r24
 e1a:	ac ee       	ldi	r26, 0xEC	; 236
 e1c:	b4 ef       	ldi	r27, 0xF4	; 244
 e1e:	a5 01       	movw	r20, r10
 e20:	94 01       	movw	r18, r8
 e22:	0e 94 c4 0a 	call	0x1588	; 0x1588 <__mulohisi3>
 e26:	dc 01       	movw	r26, r24
 e28:	cb 01       	movw	r24, r22
 e2a:	8c 0d       	add	r24, r12
 e2c:	9d 1d       	adc	r25, r13
 e2e:	ae 1d       	adc	r26, r14
 e30:	bf 1d       	adc	r27, r15
 e32:	b7 ff       	sbrs	r27, 7
 e34:	03 c0       	rjmp	.+6      	; 0xe3c <do_rand+0x72>
 e36:	01 97       	sbiw	r24, 0x01	; 1
 e38:	a1 09       	sbc	r26, r1
 e3a:	b0 48       	sbci	r27, 0x80	; 128
 e3c:	88 83       	st	Y, r24
 e3e:	99 83       	std	Y+1, r25	; 0x01
 e40:	aa 83       	std	Y+2, r26	; 0x02
 e42:	bb 83       	std	Y+3, r27	; 0x03
 e44:	9f 77       	andi	r25, 0x7F	; 127
 e46:	df 91       	pop	r29
 e48:	cf 91       	pop	r28
 e4a:	ff 90       	pop	r15
 e4c:	ef 90       	pop	r14
 e4e:	df 90       	pop	r13
 e50:	cf 90       	pop	r12
 e52:	bf 90       	pop	r11
 e54:	af 90       	pop	r10
 e56:	9f 90       	pop	r9
 e58:	8f 90       	pop	r8
 e5a:	08 95       	ret

00000e5c <rand_r>:
 e5c:	0e 94 e5 06 	call	0xdca	; 0xdca <do_rand>
 e60:	08 95       	ret

00000e62 <rand>:
 e62:	8d e8       	ldi	r24, 0x8D	; 141
 e64:	91 e0       	ldi	r25, 0x01	; 1
 e66:	0e 94 e5 06 	call	0xdca	; 0xdca <do_rand>
 e6a:	08 95       	ret

00000e6c <srand>:
 e6c:	a0 e0       	ldi	r26, 0x00	; 0
 e6e:	b0 e0       	ldi	r27, 0x00	; 0
 e70:	ed e8       	ldi	r30, 0x8D	; 141
 e72:	f1 e0       	ldi	r31, 0x01	; 1
 e74:	80 83       	st	Z, r24
 e76:	91 83       	std	Z+1, r25	; 0x01
 e78:	a2 83       	std	Z+2, r26	; 0x02
 e7a:	b3 83       	std	Z+3, r27	; 0x03
 e7c:	08 95       	ret

Disassembly of section .text.avrlibc:

000015d8 <eeprom_read_dword>:
    15d8:	cb 01       	movw	r24, r22
    15da:	a6 e1       	ldi	r26, 0x16	; 22
    15dc:	b0 e0       	ldi	r27, 0x00	; 0
    15de:	44 e0       	ldi	r20, 0x04	; 4
    15e0:	50 e0       	ldi	r21, 0x00	; 0
    15e2:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <eeprom_read_blraw>

Disassembly of section .text.avrlibc:

00001562 <eeprom_write_dword>:
    1562:	24 2f       	mov	r18, r20
    1564:	0e 94 99 0a 	call	0x1532	; 0x1532 <eeprom_write_r18>
    1568:	25 2f       	mov	r18, r21
    156a:	0e 94 99 0a 	call	0x1532	; 0x1532 <eeprom_write_r18>
    156e:	0c 94 03 0b 	jmp	0x1606	; 0x1606 <eeprom_write_word>

Disassembly of section .text.avrlibc:

00001606 <eeprom_write_word>:
    1606:	0e 94 98 0a 	call	0x1530	; 0x1530 <eeprom_write_byte>
    160a:	27 2f       	mov	r18, r23
    160c:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <eeprom_write_r18>

Disassembly of section .text.avrlibc:

000014cc <eeprom_read_block>:
    14cc:	ba 01       	movw	r22, r20
    14ce:	a9 01       	movw	r20, r18
    14d0:	dc 01       	movw	r26, r24
    14d2:	cb 01       	movw	r24, r22

000014d4 <eeprom_read_blraw>:
    14d4:	fc 01       	movw	r30, r24
    14d6:	f9 99       	sbic	0x1f, 1	; 31
    14d8:	fe cf       	rjmp	.-4      	; 0x14d6 <eeprom_read_blraw+0x2>
    14da:	06 c0       	rjmp	.+12     	; 0x14e8 <eeprom_read_blraw+0x14>
    14dc:	f2 bd       	out	0x22, r31	; 34
    14de:	e1 bd       	out	0x21, r30	; 33
    14e0:	f8 9a       	sbi	0x1f, 0	; 31
    14e2:	31 96       	adiw	r30, 0x01	; 1
    14e4:	00 b4       	in	r0, 0x20	; 32
    14e6:	0d 92       	st	X+, r0
    14e8:	41 50       	subi	r20, 0x01	; 1
    14ea:	50 40       	sbci	r21, 0x00	; 0
    14ec:	b8 f7       	brcc	.-18     	; 0x14dc <eeprom_read_blraw+0x8>
    14ee:	08 95       	ret

Disassembly of section .text.avrlibc:

00001530 <eeprom_write_byte>:
    1530:	26 2f       	mov	r18, r22

00001532 <eeprom_write_r18>:
    1532:	f9 99       	sbic	0x1f, 1	; 31
    1534:	fe cf       	rjmp	.-4      	; 0x1532 <eeprom_write_r18>
    1536:	1f ba       	out	0x1f, r1	; 31
    1538:	92 bd       	out	0x22, r25	; 34
    153a:	81 bd       	out	0x21, r24	; 33
    153c:	20 bd       	out	0x20, r18	; 32
    153e:	0f b6       	in	r0, 0x3f	; 63
    1540:	f8 94       	cli
    1542:	fa 9a       	sbi	0x1f, 2	; 31
    1544:	f9 9a       	sbi	0x1f, 1	; 31
    1546:	0f be       	out	0x3f, r0	; 63
    1548:	01 96       	adiw	r24, 0x01	; 1
    154a:	08 95       	ret

Disassembly of section .text.libgcc.div:

00001306 <__divmodsi4>:
    1306:	05 2e       	mov	r0, r21
    1308:	97 fb       	bst	r25, 7
    130a:	1e f4       	brtc	.+6      	; 0x1312 <__divmodsi4+0xc>
    130c:	00 94       	com	r0
    130e:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__negsi2>
    1312:	57 fd       	sbrc	r21, 7
    1314:	07 d0       	rcall	.+14     	; 0x1324 <__divmodsi4_neg2>
    1316:	0e 94 2a 09 	call	0x1254	; 0x1254 <__udivmodsi4>
    131a:	07 fc       	sbrc	r0, 7
    131c:	03 d0       	rcall	.+6      	; 0x1324 <__divmodsi4_neg2>
    131e:	4e f4       	brtc	.+18     	; 0x1332 <__divmodsi4_exit>
    1320:	0c 94 b9 0a 	jmp	0x1572	; 0x1572 <__negsi2>

00001324 <__divmodsi4_neg2>:
    1324:	50 95       	com	r21
    1326:	40 95       	com	r20
    1328:	30 95       	com	r19
    132a:	21 95       	neg	r18
    132c:	3f 4f       	sbci	r19, 0xFF	; 255
    132e:	4f 4f       	sbci	r20, 0xFF	; 255
    1330:	5f 4f       	sbci	r21, 0xFF	; 255

00001332 <__divmodsi4_exit>:
    1332:	08 95       	ret

Disassembly of section .text.libgcc.div:

00001572 <__negsi2>:
    1572:	90 95       	com	r25
    1574:	80 95       	com	r24
    1576:	70 95       	com	r23
    1578:	61 95       	neg	r22
    157a:	7f 4f       	sbci	r23, 0xFF	; 255
    157c:	8f 4f       	sbci	r24, 0xFF	; 255
    157e:	9f 4f       	sbci	r25, 0xFF	; 255
    1580:	08 95       	ret

Disassembly of section .text.libgcc.mul:

0000154c <__muluhisi3>:
    154c:	0e 94 89 0a 	call	0x1512	; 0x1512 <__umulhisi3>
    1550:	a5 9f       	mul	r26, r21
    1552:	90 0d       	add	r25, r0
    1554:	b4 9f       	mul	r27, r20
    1556:	90 0d       	add	r25, r0
    1558:	a4 9f       	mul	r26, r20
    155a:	80 0d       	add	r24, r0
    155c:	91 1d       	adc	r25, r1
    155e:	11 24       	eor	r1, r1
    1560:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00001582 <__mulshisi3>:
    1582:	b7 ff       	sbrs	r27, 7
    1584:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <__muluhisi3>

00001588 <__mulohisi3>:
    1588:	0e 94 a6 0a 	call	0x154c	; 0x154c <__muluhisi3>
    158c:	82 1b       	sub	r24, r18
    158e:	93 0b       	sbc	r25, r19
    1590:	08 95       	ret
